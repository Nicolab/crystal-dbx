{"repository_name":"dbx","body":"# :sparkles: DBX\n\n[![CI Status](https://github.com/Nicolab/crystal-dbx/workflows/CI/badge.svg?branch=master)](https://github.com/Nicolab/crystal-dbx/actions) [![GitHub release](https://img.shields.io/github/release/Nicolab/crystal-dbx.svg)](https://github.com/Nicolab/crystal-dbx/releases) [![Docs](https://img.shields.io/badge/docs-available-brightgreen.svg)](https://nicolab.github.io/crystal-dbx/)\n\n* DB connections manager\n* Query builder\n* ORM\n\nDBX is a [Crystal lang](https://crystal-lang.org) module to query the database, built on top of [crystal-db](https://github.com/crystal-lang/crystal-db) (common API for DB drivers).\n\nDBX is designed in a decoupled way to embed only the necessary features (multi-connections manager, query builder, query executor and ORM).\n\n## Documentation\n\n* ðŸš€ [Guide](/guide/README.md)\n* ðŸ“˜ [API doc](https://nicolab.github.io/crystal-dbx/)\n* :bookmark_tabs: [Spec tests](https://github.com/Nicolab/crystal-dbx/tree/master/spec)\n\n## Contributing\n\n1. Fork it (<https://github.com/Nicolab/crystal-dbx/fork>).\n2. Create your feature branch (`git checkout -b my-new-feature`).\n3. See [Development](#Development).\n4. Commit your changes (`git commit -am 'Add some feature'`).\n5. Push to the branch (`git push origin my-new-feature`).\n6. Create a new Pull Request.\n\n### Development\n\n1. You only need Git, Docker and Docker-compose installed on your machine.\n2. Clone this repo and run `./scripts/prepare`.\n3. Run first `docker-compose up`,\n    1. then enter to container `docker-compose exec test_pg bash` (or `test_sqlite` service),\n    2. into the container `just dev-spec`.\n4. Check the project before committing or pushing, from the host: `./scripts/check`\n\nIt's just Docker and docker-compose, you can directly type all the commands Docker and docker-compose.\n\nâœ¨ Example:\n\n_Terminal 1_\n\n```sh\n# Start the dev stack\ndocker-compose up\n```\n\n_Terminal 2_\n\n```sh\n# enter in the test_pg container\ndocker-compose exec test_pg bash\n\n# then in the test_pg container\ncrystal run ./src/app.cr\n\n# or with a recipe (helper)\njust dev-spec # <= auto reload when the code change\n\n# recipe list\njust --list\n```\n\nAlso, quickly:\n\n* `docker-compose run --rm test_pg crystal spec`\n* or `docker-compose run --rm test_pg just dev-spec`\n* when you are done: `docker-compose down --remove-orphans`\n\n## LICENSE\n\n[MIT](https://github.com/Nicolab/crystal-dbx/blob/master/LICENSE) (c) 2020, Nicolas Talle.\n\n## Author\n\n* [Nicolas Talle (@Nicolab)](https://github.com/Nicolab) - Creator and maintainer\n* This project is useful to you? [Sponsor the developer](https://github.com/sponsors/Nicolab)\n","program":{"html_id":"dbx/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"dbx","program":true,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"dbx/DBX","path":"DBX.html","kind":"module","full_name":"DBX","name":"DBX","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"dbx","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"DBX is a helper to handle multi DBs using the compatible drivers\nwith the common `crystal-db` module.\n\nExample with PostgreSQL:\n\n```\n# Connection URI / DSL https://www.postgresql.org/docs/current/libpq-connect.html#h5o-9\ndb = DBX.open(\"app\", \"postgres://...\", true)\n\npp DBX.db?(\"app\") ? \"defined\" : \"not defined\"\n\ndb.query \"select id, created_at, email from users\" do |rs|\n  rs.each do\n    id = rs.read(Int32)\n    created_at = rs.read(Time)\n    email = rs.read(String)\n    puts \"##{id}: #{email} #{created_at}\"\n  end\nend\n\n# Closes all connections of this DB connection pool and remove this DB connection pool.\nDBX.destroy(\"app\")\n```\n\nModel:\n\n```\nclass User\n  include JSON::Serializable\n  include DB::Serializable\n  include DB::Serializable::NonStrict\n\n  property lang : String\n\n  @[JSON::Field(key: \"firstName\")]\n  property first_name : String?\nend\n\ndb = DBX.open \"app\", App.cfg.db_uri\n\nuser = User.from_rs(db.query(\"SELECT id, lang, first_name FROM users\"))\npp user.to_json\n\nuser = User.from_json \"{\\\"lang\\\":\\\"fr\\\",\\\"firstName\\\":\\\"Nico\\\"}\"\npp user\n```\n\nSee also `DBX::ORM` for a more advanced model system and query builder.\n\nResources:\n- https://crystal-lang.github.io/crystal-db/api/index.html\n- https://github.com/Nicolab/crystal-dbx/tree/master/guide","summary":"<p>DBX is a helper to handle multi DBs using the compatible drivers with the common <code>crystal-db</code> module.</p>","class_methods":[{"id":"db(name:String,uri:String,strict=false):DB::Database-class-method","html_id":"db(name:String,uri:String,strict=false):DB::Database-class-method","name":"db","doc":"Same as `.open`.","summary":"<p>Same as <code><a href=\"DBX.html#open(name:String,uri:String,strict=false):DB::Database-class-method\">.open</a></code>.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"uri","doc":null,"default_value":"","external_name":"uri","restriction":"String"},{"name":"strict","doc":null,"default_value":"false","external_name":"strict","restriction":""}],"args_string":"(name : String, uri : String, strict = <span class=\"n\">false</span>) : DB::Database","args_html":"(name : String, uri : String, strict = <span class=\"n\">false</span>) : DB::Database","location":{"filename":"src/dbx.cr","line_number":93,"url":null},"def":{"name":"db","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"uri","doc":null,"default_value":"","external_name":"uri","restriction":"String"},{"name":"strict","doc":null,"default_value":"false","external_name":"strict","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"DB::Database","visibility":"Public","body":"self.open(name, uri, strict)"}},{"id":"db(name:String):DB::Database-class-method","html_id":"db(name:String):DB::Database-class-method","name":"db","doc":"Uses a given DB connection pool.","summary":"<p>Uses a given DB connection pool.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"args_string":"(name : String) : DB::Database","args_html":"(name : String) : DB::Database","location":{"filename":"src/dbx.cr","line_number":88,"url":null},"def":{"name":"db","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"DB::Database","visibility":"Public","body":"@@dbs[name]"}},{"id":"db?(name:String):Bool-class-method","html_id":"db?(name:String):Bool-class-method","name":"db?","doc":"Checks that a DB connection pool exists.","summary":"<p>Checks that a DB connection pool exists.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"args_string":"(name : String) : Bool","args_html":"(name : String) : Bool","location":{"filename":"src/dbx.cr","line_number":83,"url":null},"def":{"name":"db?","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@@dbs.has_key?(name)"}},{"id":"dbs:DBHashType-class-method","html_id":"dbs:DBHashType-class-method","name":"dbs","doc":"Returns all `DB::Database` instances.","summary":"<p>Returns all <code>DB::Database</code> instances.</p>","abstract":false,"args":[],"args_string":" : DBHashType","args_html":" : <a href=\"DBX/DBHashType.html\">DBHashType</a>","location":{"filename":"src/dbx.cr","line_number":78,"url":null},"def":{"name":"dbs","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"DBHashType","visibility":"Public","body":"@@dbs"}},{"id":"destroy(name:String)-class-method","html_id":"destroy(name:String)-class-method","name":"destroy","doc":"Closes all connections of the DB connection pool *name*\nand remove the *name* DB connection pool.","summary":"<p>Closes all connections of the DB connection pool <em>name</em> and remove the <em>name</em> DB connection pool.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"args_string":"(name : String)","args_html":"(name : String)","location":{"filename":"src/dbx.cr","line_number":113,"url":null},"def":{"name":"destroy","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if @@dbs.has_key?(name)\n  begin\n    (self.db(name)).close\n  rescue e : Exception\n    puts(\"\\nðŸ‘» DBX.destroy: error caught when closing:\")\n    pp(e)\n  end\n  @@dbs.delete(name)\nend"}},{"id":"destroy:Tuple(Int32,Int32)-class-method","html_id":"destroy:Tuple(Int32,Int32)-class-method","name":"destroy","doc":"Destroy all DB connection pool and and their connections.","summary":"<p>Destroy all DB connection pool and and their connections.</p>","abstract":false,"args":[],"args_string":" : Tuple(Int32, Int32)","args_html":" : Tuple(Int32, Int32)","location":{"filename":"src/dbx.cr","line_number":126,"url":null},"def":{"name":"destroy","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Tuple(Int32, Int32)","visibility":"Public","body":"size = @@dbs.size\n@@dbs.each_key do |name|\n  self.destroy(name)\nend\n{@@dbs.size, size}\n"}},{"id":"open(name:String,uri:String,strict=false):DB::Database-class-method","html_id":"open(name:String,uri:String,strict=false):DB::Database-class-method","name":"open","doc":"Ensures only once DB connection pool by *name* is open.\nIf the DB connection pool *name* is already initialized, it is returned.\nRaises an error if *strict* is *true* and the DB connection pool *name* is\nalready opened.","summary":"<p>Ensures only once DB connection pool by <em>name</em> is open.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"uri","doc":null,"default_value":"","external_name":"uri","restriction":"String"},{"name":"strict","doc":null,"default_value":"false","external_name":"strict","restriction":""}],"args_string":"(name : String, uri : String, strict = <span class=\"n\">false</span>) : DB::Database","args_html":"(name : String, uri : String, strict = <span class=\"n\">false</span>) : DB::Database","location":{"filename":"src/dbx.cr","line_number":101,"url":null},"def":{"name":"open","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"uri","doc":null,"default_value":"","external_name":"uri","restriction":"String"},{"name":"strict","doc":null,"default_value":"false","external_name":"strict","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"DB::Database","visibility":"Public","body":"if @@dbs.has_key?(name)\n  if strict\n  else\n    return @@dbs[name]\n  end\n  raise(\"'#{name}' DB connection pool is already opened\")\nend\n@@dbs[name] = DB.open(uri)\n"}},{"id":"pool_open_connections(name:String):Int32-class-method","html_id":"pool_open_connections(name:String):Int32-class-method","name":"pool_open_connections","doc":"Gets the number of the connections opened in the pool of *name*.","summary":"<p>Gets the number of the connections opened in the pool of <em>name</em>.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"args_string":"(name : String) : Int32","args_html":"(name : String) : Int32","location":{"filename":"src/dbx.cr","line_number":143,"url":null},"def":{"name":"pool_open_connections","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"pool_stats = self.pool_stats(name)\nif pool_stats\nelse\n  return 0\nend\npool_stats.open_connections\n"}},{"id":"pool_stats(name:String):DB::Pool::Stats?-class-method","html_id":"pool_stats(name:String):DB::Pool::Stats?-class-method","name":"pool_stats","doc":"Pool stats\nhttps://crystal-lang.github.io/crystal-db/api/latest/DB/Pool.html","summary":"<p>Pool stats https://crystal-lang.github.io/crystal-db/api/latest/DB/Pool.html</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"args_string":"(name : String) : DB::Pool::Stats?","args_html":"(name : String) : DB::Pool::Stats?","location":{"filename":"src/dbx.cr","line_number":138,"url":null},"def":{"name":"pool_stats","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"DB::Pool::Stats | ::Nil","visibility":"Public","body":"if self.db?(name)\n  (self.db(name)).pool.stats\nend"}}],"constructors":[],"instance_methods":[],"macros":[{"id":"around_query_or_exec(&block)-macro","html_id":"around_query_or_exec(&amp;block)-macro","name":"around_query_or_exec","doc":"This macro allows injecting code to be run before and after the execution\nof the request. It should return the yielded value. It must be called with 1\nblock argument that will be used to pass the `args : Enumerable`.\nThis macro should be called at the top level, not from a method.\n\n> Be careful of the performance penalty that each hook may cause,\n  be aware that your code will be executed at each query and exec.\n\n```\nDBX.around_query_or_exec do |args|\n  puts \"before\"\n  res = yield\n  puts \"after\"\n\n  puts res.class\n  puts \"exec\" if res.is_a?(DB::ExecResult)\n  puts \"query\" if res.is_a?(DB::ResultSet)\n\n  puts \"with args:\"\n  pp args\n\n  res\nend\n```\n\nExample to measure query execution time:\n\n```\nDBX.around_query_or_exec do |args|\n  start = Time.monotonic\n  res = yield\n  elapsed_time = Time.monotonic - start\n\n  puts \"Query execution time: #{elapsed_time}\"\n  res\nend\n```","summary":"<p>This macro allows injecting code to be run before and after the execution of the request.</p>","abstract":false,"args":[],"args_string":"(&block)","location":{"filename":"src/dbx.cr","line_number":186,"url":null},"def":{"name":"around_query_or_exec","args":[],"double_splat":null,"splat_index":null,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":""},"visibility":"Public","body":"    class ::DB::Statement\n      def_around_query_or_exec do |args|\n        \n{{ block.body }}\n\n      \nend\n    \nend\n  \n"}}],"types":[{"html_id":"dbx/DBX/Adapter","path":"DBX/Adapter.html","kind":"module","full_name":"DBX::Adapter","name":"Adapter","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"dbx","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"dbx/DBX","kind":"module","full_name":"DBX","name":"DBX"},"doc":"DB adapter(s) used by `DBX::QueryBuilder` and `DBX::ORM`.","summary":"<p>DB adapter(s) used by <code><a href=\"../DBX/QueryBuilder.html\">DBX::QueryBuilder</a></code> and <code><a href=\"../DBX/ORM.html\">DBX::ORM</a></code>.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[{"id":"inject_pg-macro","html_id":"inject_pg-macro","name":"inject_pg","doc":"Injects `adapter_class` method (example, it's used in the models).","summary":"<p>Injects <code>adapter_class</code> method (example, it's used in the models).</p>","abstract":false,"args":[],"args_string":"","location":{"filename":"src/adapter/pg.cr","line_number":14,"url":null},"def":{"name":"inject_pg","args":[],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    alias AdapterDB = DBX::Adapter::PostgreSQL\n    protected class_getter adapter_class : DBX::Adapter::Base.class = AdapterDB\n  "}},{"id":"inject_sqlite-macro","html_id":"inject_sqlite-macro","name":"inject_sqlite","doc":"Injects `adapter_class` method (example, it's used in the models).","summary":"<p>Injects <code>adapter_class</code> method (example, it's used in the models).</p>","abstract":false,"args":[],"args_string":"","location":{"filename":"src/adapter/sqlite.cr","line_number":14,"url":null},"def":{"name":"inject_sqlite","args":[],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    alias AdapterDB = DBX::Adapter::SQLite\n    protected class_getter adapter_class : DBX::Adapter::Base.class = AdapterDB\n  "}}],"types":[{"html_id":"dbx/DBX/Adapter/Base","path":"DBX/Adapter/Base.html","kind":"class","full_name":"DBX::Adapter::Base","name":"Base","abstract":true,"superclass":{"html_id":"dbx/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"dbx/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"dbx/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"dbx","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"dbx/DBX/Adapter/PostgreSQL","kind":"class","full_name":"DBX::Adapter::PostgreSQL","name":"PostgreSQL"},{"html_id":"dbx/DBX/Adapter/SQLite","kind":"class","full_name":"DBX::Adapter::SQLite","name":"SQLite"}],"including_types":[],"namespace":{"html_id":"dbx/DBX/Adapter","kind":"module","full_name":"DBX::Adapter","name":"Adapter"},"doc":"Base adapter.","summary":"<p>Base adapter.</p>","class_methods":[{"id":"builder_class:QueryBuilder.class-class-method","html_id":"builder_class:QueryBuilder.class-class-method","name":"builder_class","doc":"Returns query builder class.","summary":"<p>Returns query builder class.</p>","abstract":false,"args":[],"args_string":" : <span class=\"t\">QueryBuilder</span>.<span class=\"k\">class</span>","args_html":" : <span class=\"t\">QueryBuilder</span>.<span class=\"k\">class</span>","location":{"filename":"src/adapter/adapter.cr","line_number":34,"url":null},"def":{"name":"builder_class","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"QueryBuilder.class","visibility":"Public","body":"raise(NotImplementedError.new(\"'#{self}' model MUST define '#{self}.builder_class' method.\"))"}},{"id":"new_builder:QueryBuilder-class-method","html_id":"new_builder:QueryBuilder-class-method","name":"new_builder","doc":"Returns a new query builder instance.","summary":"<p>Returns a new query builder instance.</p>","abstract":false,"args":[],"args_string":" : QueryBuilder","args_html":" : <a href=\"../../DBX/QueryBuilder.html\">QueryBuilder</a>","location":{"filename":"src/adapter/adapter.cr","line_number":29,"url":null},"def":{"name":"new_builder","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"QueryBuilder","visibility":"Public","body":"self.builder_class.new"}}],"constructors":[{"id":"new(db:DB::Database)-class-method","html_id":"new(db:DB::Database)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"db","doc":null,"default_value":"","external_name":"db","restriction":"DB::Database"}],"args_string":"(db : DB::Database)","args_html":"(db : DB::Database)","location":{"filename":"src/adapter/adapter.cr","line_number":16,"url":null},"def":{"name":"new","args":[{"name":"db","doc":null,"default_value":"","external_name":"db","restriction":"DB::Database"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(db)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"create!(query:DBX::Query,data:Hash|NamedTuple,astypes,returning:DBX::QueryBuilder::OneOrMoreFieldsType=&quot;*&quot;,pk_name:DBX::QueryBuilder::FieldType=:id,pk_type=::Union(Int64,::Nil))-instance-method","html_id":"create!(query:DBX::Query,data:Hash|NamedTuple,astypes,returning:DBX::QueryBuilder::OneOrMoreFieldsType=&quot;*&quot;,pk_name:DBX::QueryBuilder::FieldType=:id,pk_type=::Union(Int64,::Nil))-instance-method","name":"create!","doc":"Creates a new record and returns.\nSee `DBX::Query#create!` for more details.","summary":"<p>Creates a new record and returns.</p>","abstract":true,"args":[{"name":"query","doc":null,"default_value":"","external_name":"query","restriction":"DBX::Query"},{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Hash | NamedTuple"},{"name":"types","doc":null,"default_value":"","external_name":"as","restriction":""},{"name":"returning","doc":null,"default_value":"\"*\"","external_name":"returning","restriction":"DBX::QueryBuilder::OneOrMoreFieldsType"},{"name":"pk_name","doc":null,"default_value":":id","external_name":"pk_name","restriction":"DBX::QueryBuilder::FieldType"},{"name":"pk_type","doc":null,"default_value":"::Union(Int64, ::Nil)","external_name":"pk_type","restriction":""}],"args_string":"(query : DBX::Query, data : Hash | NamedTuple, as types, returning : DBX::QueryBuilder::OneOrMoreFieldsType = <span class=\"s\">&quot;*&quot;</span>, pk_name : DBX::QueryBuilder::FieldType = <span class=\"n\">:id</span>, pk_type = <span class=\"t\">::</span><span class=\"t\">Union</span>(<span class=\"t\">Int64</span>, <span class=\"t\">::</span><span class=\"t\">Nil</span>))","args_html":"(query : <a href=\"../../DBX/Query.html\">DBX::Query</a>, data : Hash | NamedTuple, as types, returning : <a href=\"../../DBX/QueryBuilder/OneOrMoreFieldsType.html\">DBX::QueryBuilder::OneOrMoreFieldsType</a> = <span class=\"s\">&quot;*&quot;</span>, pk_name : <a href=\"../../DBX/QueryBuilder/FieldType.html\">DBX::QueryBuilder::FieldType</a> = <span class=\"n\">:id</span>, pk_type = <span class=\"t\">::</span><span class=\"t\">Union</span>(<span class=\"t\">Int64</span>, <span class=\"t\">::</span><span class=\"t\">Nil</span>))","location":{"filename":"src/adapter/adapter.cr","line_number":42,"url":null},"def":{"name":"create!","args":[{"name":"query","doc":null,"default_value":"","external_name":"query","restriction":"DBX::Query"},{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Hash | NamedTuple"},{"name":"types","doc":null,"default_value":"","external_name":"as","restriction":""},{"name":"returning","doc":null,"default_value":"\"*\"","external_name":"returning","restriction":"DBX::QueryBuilder::OneOrMoreFieldsType"},{"name":"pk_name","doc":null,"default_value":":id","external_name":"pk_name","restriction":"DBX::QueryBuilder::FieldType"},{"name":"pk_type","doc":null,"default_value":"::Union(Int64, ::Nil)","external_name":"pk_type","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"db:DB::Database-instance-method","html_id":"db:DB::Database-instance-method","name":"db","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : DB::Database","args_html":" : DB::Database","location":{"filename":"src/adapter/adapter.cr","line_number":19,"url":null},"def":{"name":"db","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@db"}},{"id":"new_builder:QueryBuilder-instance-method","html_id":"new_builder:QueryBuilder-instance-method","name":"new_builder","doc":"Returns a new query builder instance.","summary":"<p>Returns a new query builder instance.</p>","abstract":false,"args":[],"args_string":" : QueryBuilder","args_html":" : <a href=\"../../DBX/QueryBuilder.html\">QueryBuilder</a>","location":{"filename":"src/adapter/adapter.cr","line_number":24,"url":null},"def":{"name":"new_builder","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"QueryBuilder","visibility":"Public","body":"self.builder_class.new"}}],"macros":[],"types":[]},{"html_id":"dbx/DBX/Adapter/PGQueryBuilder","path":"DBX/Adapter/PGQueryBuilder.html","kind":"class","full_name":"DBX::Adapter::PGQueryBuilder","name":"PGQueryBuilder","abstract":false,"superclass":{"html_id":"dbx/DBX/QueryBuilder","kind":"class","full_name":"DBX::QueryBuilder","name":"QueryBuilder"},"ancestors":[{"html_id":"dbx/DBX/QueryBuilder","kind":"class","full_name":"DBX::QueryBuilder","name":"QueryBuilder"},{"html_id":"dbx/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"dbx/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"dbx","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[{"id":"QUOTE","name":"QUOTE","value":"'\"'","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"dbx/DBX/Adapter","kind":"module","full_name":"DBX::Adapter","name":"Adapter"},"doc":"`QueryBuilder` for PostgreSQL.\n:inherit:","summary":"<p><code><a href=\"../../DBX/QueryBuilder.html\">QueryBuilder</a></code> for PostgreSQL.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"ph(position:Int)-instance-method","html_id":"ph(position:Int)-instance-method","name":"ph","doc":"Adds placeholder specific to PostgreSQL.\nAdds placeholder for a SQL argument.","summary":"<p>Adds placeholder specific to PostgreSQL.</p>","abstract":false,"args":[{"name":"position","doc":null,"default_value":"","external_name":"position","restriction":"Int"}],"args_string":"(position : Int)","args_html":"(position : Int)","location":{"filename":"src/adapter/pg.cr","line_number":65,"url":null},"def":{"name":"ph","args":[{"name":"position","doc":null,"default_value":"","external_name":"position","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"#{@placeholder}#{position}\""}}],"macros":[],"types":[]},{"html_id":"dbx/DBX/Adapter/PostgreSQL","path":"DBX/Adapter/PostgreSQL.html","kind":"class","full_name":"DBX::Adapter::PostgreSQL","name":"PostgreSQL","abstract":false,"superclass":{"html_id":"dbx/DBX/Adapter/Base","kind":"class","full_name":"DBX::Adapter::Base","name":"Base"},"ancestors":[{"html_id":"dbx/DBX/Adapter/Base","kind":"class","full_name":"DBX::Adapter::Base","name":"Base"},{"html_id":"dbx/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"dbx/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"dbx","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"dbx/DBX/Adapter","kind":"module","full_name":"DBX::Adapter","name":"Adapter"},"doc":"PostgreSQL adapter","summary":"<p>PostgreSQL adapter</p>","class_methods":[{"id":"builder_class:DBX::QueryBuilder.class-class-method","html_id":"builder_class:DBX::QueryBuilder.class-class-method","name":"builder_class","doc":"Returns query builder class adapted for PostgreSQL.","summary":"<p>Returns query builder class adapted for PostgreSQL.</p>","abstract":false,"args":[],"args_string":" : <span class=\"t\">DBX</span><span class=\"t\">::</span><span class=\"t\">QueryBuilder</span>.<span class=\"k\">class</span>","args_html":" : <span class=\"t\">DBX</span><span class=\"t\">::</span><span class=\"t\">QueryBuilder</span>.<span class=\"k\">class</span>","location":{"filename":"src/adapter/pg.cr","line_number":29,"url":null},"def":{"name":"builder_class","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"DBX::QueryBuilder.class","visibility":"Public","body":"PostgreSQL::QueryBuilder"}}],"constructors":[],"instance_methods":[{"id":"builder_class:DBX::QueryBuilder.class-instance-method","html_id":"builder_class:DBX::QueryBuilder.class-instance-method","name":"builder_class","doc":"Returns query builder class adapted for PostgreSQL.","summary":"<p>Returns query builder class adapted for PostgreSQL.</p>","abstract":false,"args":[],"args_string":" : <span class=\"t\">DBX</span><span class=\"t\">::</span><span class=\"t\">QueryBuilder</span>.<span class=\"k\">class</span>","args_html":" : <span class=\"t\">DBX</span><span class=\"t\">::</span><span class=\"t\">QueryBuilder</span>.<span class=\"k\">class</span>","location":{"filename":"src/adapter/pg.cr","line_number":24,"url":null},"def":{"name":"builder_class","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"DBX::QueryBuilder.class","visibility":"Public","body":"PostgreSQL::QueryBuilder"}},{"id":"create!(query:DBX::Query,data:Hash|NamedTuple,astypes,returning:DBX::QueryBuilder::OneOrMoreFieldsType=&quot;*&quot;,pk_name:DBX::QueryBuilder::FieldType=:id,pk_type=::Union(Int64,::Nil))-instance-method","html_id":"create!(query:DBX::Query,data:Hash|NamedTuple,astypes,returning:DBX::QueryBuilder::OneOrMoreFieldsType=&quot;*&quot;,pk_name:DBX::QueryBuilder::FieldType=:id,pk_type=::Union(Int64,::Nil))-instance-method","name":"create!","doc":"Creates a new record and returns.\nSee `DBX::Query#create!` for more details.\n> To get recorded data, PostgreSQL adapter use `RETURNING` SQL statement.\n  *pk_name* and *pk_type* are useless and ignored,\n  thanks PostgreSQL `RETURNING` that makes it simpler and more efficient :)","summary":"<p>Creates a new record and returns.</p>","abstract":false,"args":[{"name":"query","doc":null,"default_value":"","external_name":"query","restriction":"DBX::Query"},{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Hash | NamedTuple"},{"name":"types","doc":null,"default_value":"","external_name":"as","restriction":""},{"name":"returning","doc":null,"default_value":"\"*\"","external_name":"returning","restriction":"DBX::QueryBuilder::OneOrMoreFieldsType"},{"name":"pk_name","doc":null,"default_value":":id","external_name":"pk_name","restriction":"DBX::QueryBuilder::FieldType"},{"name":"pk_type","doc":null,"default_value":"::Union(Int64, ::Nil)","external_name":"pk_type","restriction":""}],"args_string":"(query : DBX::Query, data : Hash | NamedTuple, as types, returning : DBX::QueryBuilder::OneOrMoreFieldsType = <span class=\"s\">&quot;*&quot;</span>, pk_name : DBX::QueryBuilder::FieldType = <span class=\"n\">:id</span>, pk_type = <span class=\"t\">::</span><span class=\"t\">Union</span>(<span class=\"t\">Int64</span>, <span class=\"t\">::</span><span class=\"t\">Nil</span>))","args_html":"(query : <a href=\"../../DBX/Query.html\">DBX::Query</a>, data : Hash | NamedTuple, as types, returning : <a href=\"../../DBX/QueryBuilder/OneOrMoreFieldsType.html\">DBX::QueryBuilder::OneOrMoreFieldsType</a> = <span class=\"s\">&quot;*&quot;</span>, pk_name : <a href=\"../../DBX/QueryBuilder/FieldType.html\">DBX::QueryBuilder::FieldType</a> = <span class=\"n\">:id</span>, pk_type = <span class=\"t\">::</span><span class=\"t\">Union</span>(<span class=\"t\">Int64</span>, <span class=\"t\">::</span><span class=\"t\">Nil</span>))","location":{"filename":"src/adapter/pg.cr","line_number":37,"url":null},"def":{"name":"create!","args":[{"name":"query","doc":null,"default_value":"","external_name":"query","restriction":"DBX::Query"},{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Hash | NamedTuple"},{"name":"types","doc":null,"default_value":"","external_name":"as","restriction":""},{"name":"returning","doc":null,"default_value":"\"*\"","external_name":"returning","restriction":"DBX::QueryBuilder::OneOrMoreFieldsType"},{"name":"pk_name","doc":null,"default_value":":id","external_name":"pk_name","restriction":"DBX::QueryBuilder::FieldType"},{"name":"pk_type","doc":null,"default_value":"::Union(Int64, ::Nil)","external_name":"pk_type","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if query.builder.query_method.nil?\nelse\n  raise(DBX::Error.new(\"\\\"create\\\" method MUST not be composed. Uses \\\"create\\\" only, without other statement except the table. \\\"Test.create\\\" ou \\\"query.table(:tests).create\\\".\"))\nend\n((query.insert(data)).returning(returning)).query_one!(types)\n"}}],"macros":[],"types":[{"html_id":"dbx/DBX/Adapter/PostgreSQL/QueryBuilder","path":"DBX/Adapter/PostgreSQL/QueryBuilder.html","kind":"alias","full_name":"DBX::Adapter::PostgreSQL::QueryBuilder","name":"QueryBuilder","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"dbx","program":false,"enum":false,"alias":true,"aliased":"DBX::Adapter::PGQueryBuilder","aliased_html":"<a href=\"../../../DBX/Adapter/PGQueryBuilder.html\">DBX::Adapter::PGQueryBuilder</a>","const":false,"constants":[{"id":"QUOTE","name":"QUOTE","value":"'\"'","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"dbx/DBX/Adapter/PostgreSQL","kind":"class","full_name":"DBX::Adapter::PostgreSQL","name":"PostgreSQL"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]},{"html_id":"dbx/DBX/Adapter/SQLite","path":"DBX/Adapter/SQLite.html","kind":"class","full_name":"DBX::Adapter::SQLite","name":"SQLite","abstract":false,"superclass":{"html_id":"dbx/DBX/Adapter/Base","kind":"class","full_name":"DBX::Adapter::Base","name":"Base"},"ancestors":[{"html_id":"dbx/DBX/Adapter/Base","kind":"class","full_name":"DBX::Adapter::Base","name":"Base"},{"html_id":"dbx/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"dbx/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"dbx","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"dbx/DBX/Adapter","kind":"module","full_name":"DBX::Adapter","name":"Adapter"},"doc":"SQLite adapter","summary":"<p>SQLite adapter</p>","class_methods":[{"id":"builder_class:DBX::QueryBuilder.class-class-method","html_id":"builder_class:DBX::QueryBuilder.class-class-method","name":"builder_class","doc":"Returns query builder class adapted for SQLite.","summary":"<p>Returns query builder class adapted for SQLite.</p>","abstract":false,"args":[],"args_string":" : <span class=\"t\">DBX</span><span class=\"t\">::</span><span class=\"t\">QueryBuilder</span>.<span class=\"k\">class</span>","args_html":" : <span class=\"t\">DBX</span><span class=\"t\">::</span><span class=\"t\">QueryBuilder</span>.<span class=\"k\">class</span>","location":{"filename":"src/adapter/sqlite.cr","line_number":29,"url":null},"def":{"name":"builder_class","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"DBX::QueryBuilder.class","visibility":"Public","body":"SQLite::QueryBuilder"}}],"constructors":[],"instance_methods":[{"id":"builder_class:DBX::QueryBuilder.class-instance-method","html_id":"builder_class:DBX::QueryBuilder.class-instance-method","name":"builder_class","doc":"Returns query builder class adapted for SQLite.","summary":"<p>Returns query builder class adapted for SQLite.</p>","abstract":false,"args":[],"args_string":" : <span class=\"t\">DBX</span><span class=\"t\">::</span><span class=\"t\">QueryBuilder</span>.<span class=\"k\">class</span>","args_html":" : <span class=\"t\">DBX</span><span class=\"t\">::</span><span class=\"t\">QueryBuilder</span>.<span class=\"k\">class</span>","location":{"filename":"src/adapter/sqlite.cr","line_number":24,"url":null},"def":{"name":"builder_class","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"DBX::QueryBuilder.class","visibility":"Public","body":"SQLite::QueryBuilder"}},{"id":"create!(query:DBX::Query,data:Hash|NamedTuple,astypes,returning:DBX::QueryBuilder::OneOrMoreFieldsType=&quot;*&quot;,pk_name:DBX::QueryBuilder::FieldType=:id,pk_type=::Union(Int64,::Nil))-instance-method","html_id":"create!(query:DBX::Query,data:Hash|NamedTuple,astypes,returning:DBX::QueryBuilder::OneOrMoreFieldsType=&quot;*&quot;,pk_name:DBX::QueryBuilder::FieldType=:id,pk_type=::Union(Int64,::Nil))-instance-method","name":"create!","doc":"Creates a new record and returns.\nSee `DBX::Query#create!` for more details.","summary":"<p>Creates a new record and returns.</p>","abstract":false,"args":[{"name":"query","doc":null,"default_value":"","external_name":"query","restriction":"DBX::Query"},{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Hash | NamedTuple"},{"name":"types","doc":null,"default_value":"","external_name":"as","restriction":""},{"name":"returning","doc":null,"default_value":"\"*\"","external_name":"returning","restriction":"DBX::QueryBuilder::OneOrMoreFieldsType"},{"name":"pk_name","doc":null,"default_value":":id","external_name":"pk_name","restriction":"DBX::QueryBuilder::FieldType"},{"name":"pk_type","doc":null,"default_value":"::Union(Int64, ::Nil)","external_name":"pk_type","restriction":""}],"args_string":"(query : DBX::Query, data : Hash | NamedTuple, as types, returning : DBX::QueryBuilder::OneOrMoreFieldsType = <span class=\"s\">&quot;*&quot;</span>, pk_name : DBX::QueryBuilder::FieldType = <span class=\"n\">:id</span>, pk_type = <span class=\"t\">::</span><span class=\"t\">Union</span>(<span class=\"t\">Int64</span>, <span class=\"t\">::</span><span class=\"t\">Nil</span>))","args_html":"(query : <a href=\"../../DBX/Query.html\">DBX::Query</a>, data : Hash | NamedTuple, as types, returning : <a href=\"../../DBX/QueryBuilder/OneOrMoreFieldsType.html\">DBX::QueryBuilder::OneOrMoreFieldsType</a> = <span class=\"s\">&quot;*&quot;</span>, pk_name : <a href=\"../../DBX/QueryBuilder/FieldType.html\">DBX::QueryBuilder::FieldType</a> = <span class=\"n\">:id</span>, pk_type = <span class=\"t\">::</span><span class=\"t\">Union</span>(<span class=\"t\">Int64</span>, <span class=\"t\">::</span><span class=\"t\">Nil</span>))","location":{"filename":"src/adapter/sqlite.cr","line_number":34,"url":null},"def":{"name":"create!","args":[{"name":"query","doc":null,"default_value":"","external_name":"query","restriction":"DBX::Query"},{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Hash | NamedTuple"},{"name":"types","doc":null,"default_value":"","external_name":"as","restriction":""},{"name":"returning","doc":null,"default_value":"\"*\"","external_name":"returning","restriction":"DBX::QueryBuilder::OneOrMoreFieldsType"},{"name":"pk_name","doc":null,"default_value":":id","external_name":"pk_name","restriction":"DBX::QueryBuilder::FieldType"},{"name":"pk_type","doc":null,"default_value":"::Union(Int64, ::Nil)","external_name":"pk_type","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if query.builder.query_method.nil?\nelse\n  raise(DBX::Error.new(\"\\\"create\\\" method MUST not be composed. Uses \\\"create\\\" only, without other statement except the table. \\\"Test.create\\\" ou \\\"query.table(:tests).create\\\".\"))\nend\ntable_name = query.builder.table.gsub(\"\\\"\", \"\")\nlast_id = (query.insert(data)).exec!.last_insert_id\nif last_id.nil?\n  raise(DB::NoResultsError.new(\"Cannot create\"))\nend\n(((query.table(table_name)).find(pk_name, last_id)).select(returning)).query_one!(types)\n"}}],"macros":[],"types":[{"html_id":"dbx/DBX/Adapter/SQLite/QueryBuilder","path":"DBX/Adapter/SQLite/QueryBuilder.html","kind":"alias","full_name":"DBX::Adapter::SQLite::QueryBuilder","name":"QueryBuilder","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"dbx","program":false,"enum":false,"alias":true,"aliased":"DBX::Adapter::SQLiteQueryBuilder","aliased_html":"<a href=\"../../../DBX/Adapter/SQLiteQueryBuilder.html\">DBX::Adapter::SQLiteQueryBuilder</a>","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"dbx/DBX/Adapter/SQLite","kind":"class","full_name":"DBX::Adapter::SQLite","name":"SQLite"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]},{"html_id":"dbx/DBX/Adapter/SQLiteQueryBuilder","path":"DBX/Adapter/SQLiteQueryBuilder.html","kind":"class","full_name":"DBX::Adapter::SQLiteQueryBuilder","name":"SQLiteQueryBuilder","abstract":false,"superclass":{"html_id":"dbx/DBX/QueryBuilder","kind":"class","full_name":"DBX::QueryBuilder","name":"QueryBuilder"},"ancestors":[{"html_id":"dbx/DBX/QueryBuilder","kind":"class","full_name":"DBX::QueryBuilder","name":"QueryBuilder"},{"html_id":"dbx/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"dbx/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"dbx","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"dbx/DBX/Adapter","kind":"module","full_name":"DBX::Adapter","name":"Adapter"},"doc":"`QueryBuilder` for SQLite.\n:inherit:","summary":"<p><code><a href=\"../../DBX/QueryBuilder.html\">QueryBuilder</a></code> for SQLite.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]},{"html_id":"dbx/DBX/DBHashType","path":"DBX/DBHashType.html","kind":"alias","full_name":"DBX::DBHashType","name":"DBHashType","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"dbx","program":false,"enum":false,"alias":true,"aliased":"Hash(String, DB::Database)","aliased_html":"Hash(String, DB::Database)","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"dbx/DBX","kind":"module","full_name":"DBX","name":"DBX"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"dbx/DBX/Error","path":"DBX/Error.html","kind":"class","full_name":"DBX::Error","name":"Error","abstract":false,"superclass":{"html_id":"dbx/DB/Error","kind":"class","full_name":"DB::Error","name":"Error"},"ancestors":[{"html_id":"dbx/DB/Error","kind":"class","full_name":"DB::Error","name":"Error"},{"html_id":"dbx/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"dbx/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"dbx/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"dbx","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"dbx/DBX/ORM/Model/Error","kind":"class","full_name":"DBX::ORM::Model::Error","name":"Error"}],"including_types":[],"namespace":{"html_id":"dbx/DBX","kind":"module","full_name":"DBX","name":"DBX"},"doc":"Raised when an error occurred, related with `DB` or `DBX`.","summary":"<p>Raised when an error occurred, related with <code>DB</code> or <code><a href=\"../DBX.html\">DBX</a></code>.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"dbx/DBX/NotSupportedError","path":"DBX/NotSupportedError.html","kind":"class","full_name":"DBX::NotSupportedError","name":"NotSupportedError","abstract":false,"superclass":{"html_id":"dbx/NotImplementedError","kind":"class","full_name":"NotImplementedError","name":"NotImplementedError"},"ancestors":[{"html_id":"dbx/NotImplementedError","kind":"class","full_name":"NotImplementedError","name":"NotImplementedError"},{"html_id":"dbx/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"dbx/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"dbx/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"dbx","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"dbx/DBX","kind":"module","full_name":"DBX","name":"DBX"},"doc":"Raised when a method is not supported.\n\nThis can be used either to stub out method bodies,\nor when the method is not supported on the current adapter.","summary":"<p>Raised when a method is not supported.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"dbx/DBX/ORM","path":"DBX/ORM.html","kind":"module","full_name":"DBX::ORM","name":"ORM","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"dbx","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"dbx/DBX","kind":"module","full_name":"DBX","name":"DBX"},"doc":"DBX ORM (Object-Relational Mapping).","summary":"<p>DBX ORM (Object-Relational Mapping).</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"dbx/DBX/ORM/Model","path":"DBX/ORM/Model.html","kind":"class","full_name":"DBX::ORM::Model","name":"Model","abstract":true,"superclass":{"html_id":"dbx/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"dbx/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"dbx/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"dbx","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"dbx/DBX/ORM","kind":"module","full_name":"DBX::ORM","name":"ORM"},"doc":"Base class for all models.\n\nExample, creation of a model for a table `users`:\n\n```\nclass User < DBX::ORM::Model\n  adapter :pg\n\n  class Schema\n    include DB::Serializable\n    include JSON::Serializable\n    include JSON::Serializable::Unmapped\n\n    property id : Int64?\n    property name : String\n    property about : String\n    property age : Int32\n  end\nend\n```\n\nCustomize `ModelQuery` used by `User` model:\n\n```\nclass User < DBX::ORM::Model\n  # ...\n\n  class ModelQuery < DBX::ORM::ModelQuery(User)\n    # By default `SELECT` value is `*`,\n    # this method select all fields explicitly.\n    def select_all\n      self.select({:id, :name, :about, :age})\n    end\n  end\nend\n```\n\nIn the model example above, we have added a new method (`select_all`) to `ModelQuery',\nwhich can be used in each query.\n\n```\nuser = User.find(id).select_all.to_o\nusers = User.find.select_all.to_a\n```","summary":"<p>Base class for all models.</p>","class_methods":[{"id":"connection:String-class-method","html_id":"connection:String-class-method","name":"connection","doc":"DB connection name used by this `Model` instance.","summary":"<p>DB connection name used by this <code><a href=\"../../DBX/ORM/Model.html\">Model</a></code> instance.</p>","abstract":false,"args":[],"args_string":" : String","args_html":" : String","location":{"filename":"src/orm/model.cr","line_number":192,"url":null},"def":{"name":"connection","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@@conn_name"}},{"id":"db:DB::Database-class-method","html_id":"db:DB::Database-class-method","name":"db","doc":"Returns DB connection name used by this `Model` instance.","summary":"<p>Returns DB connection name used by this <code><a href=\"../../DBX/ORM/Model.html\">Model</a></code> instance.</p>","abstract":false,"args":[],"args_string":" : DB::Database","args_html":" : DB::Database","location":{"filename":"src/orm/model.cr","line_number":197,"url":null},"def":{"name":"db","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"DB::Database","visibility":"Public","body":"DBX.db(connection)"}},{"id":"models-class-method","html_id":"models-class-method","name":"models","doc":"Returns array of all non-abstract subclasses of *DBX::ORM::Model.\n\n```\nDBX::ORM::Model.models # => [Contact, Address, User]\n```","summary":"<p>Returns array of all non-abstract subclasses of *DBX::ORM::Model.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/orm/model.cr","line_number":206,"url":null},"def":{"name":"models","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"{% if true %}\n        {% models = @type.all_subclasses.select do |m|\n  !m.abstract?\nend %}\n        {% if !models.empty? %}\n          [\n            {% for model in models %}\n              ::{{ model.name }},\n            {% end %}\n          ]\n        {% else %}\n          [] of ::DBX::ORM::Model.class\n        {% end %}\n      {% end %}"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"dbx/DBX/ORM/Model/Error","path":"DBX/ORM/Model/Error.html","kind":"class","full_name":"DBX::ORM::Model::Error","name":"Error","abstract":false,"superclass":{"html_id":"dbx/DBX/Error","kind":"class","full_name":"DBX::Error","name":"Error"},"ancestors":[{"html_id":"dbx/DBX/Error","kind":"class","full_name":"DBX::Error","name":"Error"},{"html_id":"dbx/DB/Error","kind":"class","full_name":"DB::Error","name":"Error"},{"html_id":"dbx/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"dbx/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"dbx/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"dbx","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"dbx/DBX/ORM/Model","kind":"class","full_name":"DBX::ORM::Model","name":"Model"},"doc":"Model error.","summary":"<p>Model error.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"dbx/DBX/ORM/Model/Schema","path":"DBX/ORM/Model/Schema.html","kind":"class","full_name":"DBX::ORM::Model::Schema","name":"Schema","abstract":false,"superclass":{"html_id":"dbx/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"dbx/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"dbx/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"dbx","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"dbx/DBX/ORM/Model","kind":"class","full_name":"DBX::ORM::Model","name":"Model"},"doc":"`Model` Schema.","summary":"<p><code><a href=\"../../../DBX/ORM/Model.html\">Model</a></code> Schema.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"pk-instance-method","html_id":"pk-instance-method","name":"pk","doc":"Same as `pk` but may return `nil` when the record hasn't been saved\ninstead of raising.","summary":"<p>Same as <code><a href=\"../../../DBX/ORM/Model/Schema.html#pk-instance-method\">#pk</a></code> but may return <code>nil</code> when the record hasn't been saved instead of raising.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/orm/model.cr","line_number":74,"url":null},"def":{"name":"pk","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.id"}},{"id":"pk!-instance-method","html_id":"pk!-instance-method","name":"pk!","doc":"Always returns this record's primary key value, even when the primary key\nisn't named `pk`.","summary":"<p>Always returns this record's primary key value, even when the primary key isn't named <code><a href=\"../../../DBX/ORM/Model/Schema.html#pk-instance-method\">#pk</a></code>.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/orm/model.cr","line_number":66,"url":null},"def":{"name":"pk!","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.pk.not_nil!"}}],"macros":[],"types":[]}]},{"html_id":"dbx/DBX/ORM/ModelMixin","path":"DBX/ORM/ModelMixin.html","kind":"module","full_name":"DBX::ORM::ModelMixin(Model, ModelQuery)","name":"ModelMixin","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"dbx","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"dbx/DBX/ORM","kind":"module","full_name":"DBX::ORM","name":"ORM"},"doc":"Mixin for `Model` class.\n> Automatically injected into the models.","summary":"<p>Mixin for <code>Model</code> class.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"create!(data:Hash|NamedTuple,returning:DBX::QueryBuilder::OneOrMoreFieldsType=&quot;*&quot;):Model::Schema-instance-method","html_id":"create!(data:Hash|NamedTuple,returning:DBX::QueryBuilder::OneOrMoreFieldsType=&quot;*&quot;):Model::Schema-instance-method","name":"create!","doc":"Creates a new resource and returns.","summary":"<p>Creates a new resource and returns.</p>","abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Hash | NamedTuple"},{"name":"returning","doc":null,"default_value":"\"*\"","external_name":"returning","restriction":"DBX::QueryBuilder::OneOrMoreFieldsType"}],"args_string":"(data : Hash | NamedTuple, returning : DBX::QueryBuilder::OneOrMoreFieldsType = <span class=\"s\">&quot;*&quot;</span>) : Model::Schema","args_html":"(data : Hash | NamedTuple, returning : <a href=\"../../DBX/QueryBuilder/OneOrMoreFieldsType.html\">DBX::QueryBuilder::OneOrMoreFieldsType</a> = <span class=\"s\">&quot;*&quot;</span>) : Model::Schema","location":{"filename":"src/orm/model_mixin.cr","line_number":33,"url":null},"def":{"name":"create!","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Hash | NamedTuple"},{"name":"returning","doc":null,"default_value":"\"*\"","external_name":"returning","restriction":"DBX::QueryBuilder::OneOrMoreFieldsType"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Model::Schema","visibility":"Public","body":"query.create!(data, returning: returning)"}},{"id":"delete(pk_value):ModelQuery-instance-method","html_id":"delete(pk_value):ModelQuery-instance-method","name":"delete","doc":"Deletes one resource by its primary key.","summary":"<p>Deletes one resource by its primary key.</p>","abstract":false,"args":[{"name":"pk_value","doc":null,"default_value":"","external_name":"pk_value","restriction":""}],"args_string":"(pk_value) : ModelQuery","args_html":"(pk_value) : ModelQuery","location":{"filename":"src/orm/model_mixin.cr","line_number":56,"url":null},"def":{"name":"delete","args":[{"name":"pk_value","doc":null,"default_value":"","external_name":"pk_value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ModelQuery","visibility":"Public","body":"query.delete(Model.pk_name, pk_value)"}},{"id":"delete:ModelQuery-instance-method","html_id":"delete:ModelQuery-instance-method","name":"delete","doc":"Deletes one or more resources.","summary":"<p>Deletes one or more resources.</p>","abstract":false,"args":[],"args_string":" : ModelQuery","args_html":" : ModelQuery","location":{"filename":"src/orm/model_mixin.cr","line_number":51,"url":null},"def":{"name":"delete","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ModelQuery","visibility":"Public","body":"query.delete"}},{"id":"find(pk_value):ModelQuery-instance-method","html_id":"find(pk_value):ModelQuery-instance-method","name":"find","doc":"Find one resource by its primary key.","summary":"<p>Find one resource by its primary key.</p>","abstract":false,"args":[{"name":"pk_value","doc":null,"default_value":"","external_name":"pk_value","restriction":""}],"args_string":"(pk_value) : ModelQuery","args_html":"(pk_value) : ModelQuery","location":{"filename":"src/orm/model_mixin.cr","line_number":23,"url":null},"def":{"name":"find","args":[{"name":"pk_value","doc":null,"default_value":"","external_name":"pk_value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ModelQuery","visibility":"Public","body":"query.find(Model.pk_name, pk_value)"}},{"id":"find:ModelQuery-instance-method","html_id":"find:ModelQuery-instance-method","name":"find","doc":"Find one or more resources.","summary":"<p>Find one or more resources.</p>","abstract":false,"args":[],"args_string":" : ModelQuery","args_html":" : ModelQuery","location":{"filename":"src/orm/model_mixin.cr","line_number":18,"url":null},"def":{"name":"find","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ModelQuery","visibility":"Public","body":"query.find"}},{"id":"insert(data:Hash|NamedTuple):ModelQuery-instance-method","html_id":"insert(data:Hash|NamedTuple):ModelQuery-instance-method","name":"insert","doc":"Inserts a new resource.","summary":"<p>Inserts a new resource.</p>","abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Hash | NamedTuple"}],"args_string":"(data : Hash | NamedTuple) : ModelQuery","args_html":"(data : Hash | NamedTuple) : ModelQuery","location":{"filename":"src/orm/model_mixin.cr","line_number":28,"url":null},"def":{"name":"insert","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Hash | NamedTuple"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ModelQuery","visibility":"Public","body":"query.insert(data)"}},{"id":"query:ModelQuery-instance-method","html_id":"query:ModelQuery-instance-method","name":"query","doc":"Creates a new `ModelQuery` instance.","summary":"<p>Creates a new <code>ModelQuery</code> instance.</p>","abstract":false,"args":[],"args_string":" : ModelQuery","args_html":" : ModelQuery","location":{"filename":"src/orm/model_mixin.cr","line_number":13,"url":null},"def":{"name":"query","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ModelQuery","visibility":"Public","body":"(ModelQuery.new(self.adapter)).table(self.table_name)"}},{"id":"update(pk_value,data:Hash|NamedTuple):ModelQuery-instance-method","html_id":"update(pk_value,data:Hash|NamedTuple):ModelQuery-instance-method","name":"update","doc":"Updates one resource by its primary key.","summary":"<p>Updates one resource by its primary key.</p>","abstract":false,"args":[{"name":"pk_value","doc":null,"default_value":"","external_name":"pk_value","restriction":""},{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Hash | NamedTuple"}],"args_string":"(pk_value, data : Hash | NamedTuple) : ModelQuery","args_html":"(pk_value, data : Hash | NamedTuple) : ModelQuery","location":{"filename":"src/orm/model_mixin.cr","line_number":46,"url":null},"def":{"name":"update","args":[{"name":"pk_value","doc":null,"default_value":"","external_name":"pk_value","restriction":""},{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Hash | NamedTuple"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ModelQuery","visibility":"Public","body":"query.update(Model.pk_name, pk_value, data)"}},{"id":"update(data:Hash|NamedTuple):ModelQuery-instance-method","html_id":"update(data:Hash|NamedTuple):ModelQuery-instance-method","name":"update","doc":"Update one or more resources.","summary":"<p>Update one or more resources.</p>","abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Hash | NamedTuple"}],"args_string":"(data : Hash | NamedTuple) : ModelQuery","args_html":"(data : Hash | NamedTuple) : ModelQuery","location":{"filename":"src/orm/model_mixin.cr","line_number":41,"url":null},"def":{"name":"update","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Hash | NamedTuple"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ModelQuery","visibility":"Public","body":"query.update(data)"}}],"macros":[],"types":[]},{"html_id":"dbx/DBX/ORM/ModelQuery","path":"DBX/ORM/ModelQuery.html","kind":"class","full_name":"DBX::ORM::ModelQuery(Model)","name":"ModelQuery","abstract":false,"superclass":{"html_id":"dbx/DBX/Query","kind":"class","full_name":"DBX::Query","name":"Query"},"ancestors":[{"html_id":"dbx/DBX/Query","kind":"class","full_name":"DBX::Query","name":"Query"},{"html_id":"dbx/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"dbx/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"dbx","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"dbx/DBX/ORM","kind":"module","full_name":"DBX::ORM","name":"ORM"},"doc":"Generic `ModelQuery` class.\n> Automatically injected into the models.\n\nIf you want to customize the queries of a model, you can define\nyou own `ModelQuery` into this model.\n\n```\nclass User < DBX::ORM::Model\n  # ...\n\n  class ModelQuery < DBX::ORM::ModelQuery(User)\n    # By default `SELECT` value is `*`,\n    # this method select all fields explicitly.\n    def select_all\n      self.select({:id, :name, :about, :age})\n    end\n  end\nend\n```\n\nIn the model example above, we have added a new method (`select_all`) to `ModelQuery',\nwhich can be used in each query.\n\n```\nuser = User.find(id).select_all.to_o\nusers = User.find.select_all.to_a\n```","summary":"<p>Generic <code><a href=\"../../DBX/ORM/ModelQuery.html\">ModelQuery</a></code> class.</p>","class_methods":[],"constructors":[{"id":"new(adapter:DBX::Adapter::Base)-class-method","html_id":"new(adapter:DBX::Adapter::Base)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"adapter","doc":null,"default_value":"","external_name":"adapter","restriction":"DBX::Adapter::Base"}],"args_string":"(adapter : DBX::Adapter::Base)","args_html":"(adapter : <a href=\"../../DBX/Adapter/Base.html\">DBX::Adapter::Base</a>)","location":{"filename":"src/query_builder/executor.cr","line_number":16,"url":null},"def":{"name":"new","args":[{"name":"adapter","doc":null,"default_value":"","external_name":"adapter","restriction":"DBX::Adapter::Base"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = ModelQuery(Model).allocate\n_.initialize(adapter)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"create!(data,returning:DBX::QueryBuilder::OneOrMoreFieldsType=&quot;*&quot;)-instance-method","html_id":"create!(data,returning:DBX::QueryBuilder::OneOrMoreFieldsType=&quot;*&quot;)-instance-method","name":"create!","doc":"Creates a new record and returns.\n\n```\ntest = Test.create!(data)\nputs test.id\n```","summary":"<p>Creates a new record and returns.</p>","abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":""},{"name":"returning","doc":null,"default_value":"\"*\"","external_name":"returning","restriction":"DBX::QueryBuilder::OneOrMoreFieldsType"}],"args_string":"(data, returning : DBX::QueryBuilder::OneOrMoreFieldsType = <span class=\"s\">&quot;*&quot;</span>)","args_html":"(data, returning : <a href=\"../../DBX/QueryBuilder/OneOrMoreFieldsType.html\">DBX::QueryBuilder::OneOrMoreFieldsType</a> = <span class=\"s\">&quot;*&quot;</span>)","location":{"filename":"src/orm/model_query.cr","line_number":58,"url":null},"def":{"name":"create!","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":""},{"name":"returning","doc":null,"default_value":"\"*\"","external_name":"returning","restriction":"DBX::QueryBuilder::OneOrMoreFieldsType"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"create!(data, as: Model::Schema, returning: returning, pk_name: Model.pk_name, pk_type: Model.pk_type)"}},{"id":"query_all-instance-method","html_id":"query_all-instance-method","name":"query_all","doc":"Executes current query using current `Model::Schema`.","summary":"<p>Executes current query using current <code>Model::Schema</code>.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/orm/model_query.cr","line_number":48,"url":null},"def":{"name":"query_all","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"query_all(as: Model::Schema)"}},{"id":"query_one-instance-method","html_id":"query_one-instance-method","name":"query_one","doc":"Executes current query using current `Model::Schema`.","summary":"<p>Executes current query using current <code>Model::Schema</code>.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/orm/model_query.cr","line_number":38,"url":null},"def":{"name":"query_one","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"query_one(as: Model::Schema)"}},{"id":"query_one!-instance-method","html_id":"query_one!-instance-method","name":"query_one!","doc":"Executes current query using current `Model::Schema`.","summary":"<p>Executes current query using current <code>Model::Schema</code>.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/orm/model_query.cr","line_number":43,"url":null},"def":{"name":"query_one!","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"query_one!(as: Model::Schema)"}},{"id":"to_a(astypes)-instance-method","html_id":"to_a(astypes)-instance-method","name":"to_a","doc":"Shortcut, same as `query_all(types)`.","summary":"<p>Shortcut, same as <code>query_all(types)</code>.</p>","abstract":false,"args":[{"name":"types","doc":null,"default_value":"","external_name":"as","restriction":""}],"args_string":"(as types)","args_html":"(as types)","location":{"filename":"src/orm/model_query.cr","line_number":94,"url":null},"def":{"name":"to_a","args":[{"name":"types","doc":null,"default_value":"","external_name":"as","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"query_all(types)"}},{"id":"to_a-instance-method","html_id":"to_a-instance-method","name":"to_a","doc":"Shortcut, same as `query_all`.","summary":"<p>Shortcut, same as <code><a href=\"../../DBX/ORM/ModelQuery.html#query_all-instance-method\">#query_all</a></code>.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/orm/model_query.cr","line_number":89,"url":null},"def":{"name":"to_a","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"query_all(as: Model::Schema)"}},{"id":"to_o(astypes)-instance-method","html_id":"to_o(astypes)-instance-method","name":"to_o","doc":"Shortcut, same as `query_one(types)`.","summary":"<p>Shortcut, same as <code>query_one(types)</code>.</p>","abstract":false,"args":[{"name":"types","doc":null,"default_value":"","external_name":"as","restriction":""}],"args_string":"(as types)","args_html":"(as types)","location":{"filename":"src/orm/model_query.cr","line_number":84,"url":null},"def":{"name":"to_o","args":[{"name":"types","doc":null,"default_value":"","external_name":"as","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"query_one(types)"}},{"id":"to_o-instance-method","html_id":"to_o-instance-method","name":"to_o","doc":"Shortcut, same as `query_one`.","summary":"<p>Shortcut, same as <code><a href=\"../../DBX/ORM/ModelQuery.html#query_one-instance-method\">#query_one</a></code>.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/orm/model_query.cr","line_number":74,"url":null},"def":{"name":"to_o","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"query_one(as: Model::Schema)"}},{"id":"to_o!(astypes)-instance-method","html_id":"to_o!(astypes)-instance-method","name":"to_o!","doc":"Shortcut, same as `query_one!(types)`.","summary":"<p>Shortcut, same as <code>query_one!(types)</code>.</p>","abstract":false,"args":[{"name":"types","doc":null,"default_value":"","external_name":"as","restriction":""}],"args_string":"(as types)","args_html":"(as types)","location":{"filename":"src/orm/model_query.cr","line_number":79,"url":null},"def":{"name":"to_o!","args":[{"name":"types","doc":null,"default_value":"","external_name":"as","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"query_one!(types)"}},{"id":"to_o!-instance-method","html_id":"to_o!-instance-method","name":"to_o!","doc":"Shortcut, same as `query_one!`.","summary":"<p>Shortcut, same as <code><a href=\"../../DBX/ORM/ModelQuery.html#query_one!-instance-method\">#query_one!</a></code>.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/orm/model_query.cr","line_number":69,"url":null},"def":{"name":"to_o!","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"query_one!(as: Model::Schema)"}}],"macros":[],"types":[]}]},{"html_id":"dbx/DBX/Query","path":"DBX/Query.html","kind":"class","full_name":"DBX::Query","name":"Query","abstract":false,"superclass":{"html_id":"dbx/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"dbx/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"dbx/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"dbx","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"dbx/DBX/ORM/ModelQuery","kind":"class","full_name":"DBX::ORM::ModelQuery(Model)","name":"ModelQuery"}],"including_types":[],"namespace":{"html_id":"dbx/DBX","kind":"module","full_name":"DBX","name":"DBX"},"doc":"Query executor.\nSee also: https://crystal-lang.github.io/crystal-db/api/latest/DB/QueryMethods.html","summary":"<p>Query executor.</p>","class_methods":[],"constructors":[{"id":"new(adapter:DBX::Adapter::Base)-class-method","html_id":"new(adapter:DBX::Adapter::Base)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"adapter","doc":null,"default_value":"","external_name":"adapter","restriction":"DBX::Adapter::Base"}],"args_string":"(adapter : DBX::Adapter::Base)","args_html":"(adapter : <a href=\"../DBX/Adapter/Base.html\">DBX::Adapter::Base</a>)","location":{"filename":"src/query_builder/executor.cr","line_number":16,"url":null},"def":{"name":"new","args":[{"name":"adapter","doc":null,"default_value":"","external_name":"adapter","restriction":"DBX::Adapter::Base"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(adapter)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"build:Tuple-instance-method","html_id":"build:Tuple-instance-method","name":"build","doc":"Builds current query and returns `sql, args`.\nSee `DBX::QueryBuilder#build` method.","summary":"<p>Builds current query and returns <code>sql, args</code>.</p>","abstract":false,"args":[],"args_string":" : Tuple","args_html":" : Tuple","location":{"filename":"src/query_builder/executor.cr","line_number":170,"url":null},"def":{"name":"build","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Tuple","visibility":"Public","body":"@builder.build"}},{"id":"builder:DBX::QueryBuilder-instance-method","html_id":"builder:DBX::QueryBuilder-instance-method","name":"builder","doc":"Returns `DBX::QueryBuilder` instance used in current `Query` instance.","summary":"<p>Returns <code><a href=\"../DBX/QueryBuilder.html\">DBX::QueryBuilder</a></code> instance used in current <code><a href=\"../DBX/Query.html\">Query</a></code> instance.</p>","abstract":false,"args":[],"args_string":" : DBX::QueryBuilder","args_html":" : <a href=\"../DBX/QueryBuilder.html\">DBX::QueryBuilder</a>","location":{"filename":"src/query_builder/executor.cr","line_number":175,"url":null},"def":{"name":"builder","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"DBX::QueryBuilder","visibility":"Public","body":"@builder"}},{"id":"create!(data:Hash|NamedTuple,astypes,returning:DBX::QueryBuilder::OneOrMoreFieldsType=&quot;*&quot;,pk_name:DBX::QueryBuilder::FieldType=:id,pk_type=::Union(Int64,::Nil))-instance-method","html_id":"create!(data:Hash|NamedTuple,astypes,returning:DBX::QueryBuilder::OneOrMoreFieldsType=&quot;*&quot;,pk_name:DBX::QueryBuilder::FieldType=:id,pk_type=::Union(Int64,::Nil))-instance-method","name":"create!","doc":"Creates a new record and returns.\n\n```\nquery.table(:tests).create!(\n  {name: \"Baby\", about: \"I'm a baby\", age: 1},\n  as: {String, Int32},\n  returning: {:name, :age}\n)\n# => {\"Baby\", 1}\n\nquery.table(:tests).create!(\n  {name: \"Baby\", about: \"I'm a baby\", age: 1},\n  as: {name: String, age: Int32},\n  returning: {:name, :age}\n)\n# => {name: \"Baby\", age: 1}\n```","summary":"<p>Creates a new record and returns.</p>","abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Hash | NamedTuple"},{"name":"types","doc":null,"default_value":"","external_name":"as","restriction":""},{"name":"returning","doc":null,"default_value":"\"*\"","external_name":"returning","restriction":"DBX::QueryBuilder::OneOrMoreFieldsType"},{"name":"pk_name","doc":null,"default_value":":id","external_name":"pk_name","restriction":"DBX::QueryBuilder::FieldType"},{"name":"pk_type","doc":null,"default_value":"::Union(Int64, ::Nil)","external_name":"pk_type","restriction":""}],"args_string":"(data : Hash | NamedTuple, as types, returning : DBX::QueryBuilder::OneOrMoreFieldsType = <span class=\"s\">&quot;*&quot;</span>, pk_name : DBX::QueryBuilder::FieldType = <span class=\"n\">:id</span>, pk_type = <span class=\"t\">::</span><span class=\"t\">Union</span>(<span class=\"t\">Int64</span>, <span class=\"t\">::</span><span class=\"t\">Nil</span>))","args_html":"(data : Hash | NamedTuple, as types, returning : <a href=\"../DBX/QueryBuilder/OneOrMoreFieldsType.html\">DBX::QueryBuilder::OneOrMoreFieldsType</a> = <span class=\"s\">&quot;*&quot;</span>, pk_name : <a href=\"../DBX/QueryBuilder/FieldType.html\">DBX::QueryBuilder::FieldType</a> = <span class=\"n\">:id</span>, pk_type = <span class=\"t\">::</span><span class=\"t\">Union</span>(<span class=\"t\">Int64</span>, <span class=\"t\">::</span><span class=\"t\">Nil</span>))","location":{"filename":"src/query_builder/executor.cr","line_number":198,"url":null},"def":{"name":"create!","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Hash | NamedTuple"},{"name":"types","doc":null,"default_value":"","external_name":"as","restriction":""},{"name":"returning","doc":null,"default_value":"\"*\"","external_name":"returning","restriction":"DBX::QueryBuilder::OneOrMoreFieldsType"},{"name":"pk_name","doc":null,"default_value":":id","external_name":"pk_name","restriction":"DBX::QueryBuilder::FieldType"},{"name":"pk_type","doc":null,"default_value":"::Union(Int64, ::Nil)","external_name":"pk_type","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@adapter.create!(self, data, types, returning, pk_name, pk_type)"}},{"id":"exec-instance-method","html_id":"exec-instance-method","name":"exec","doc":":ditto:\nReturns `nil` instead of raising `DB::NoResultsError`.","summary":"<p>:ditto: Returns <code>nil</code> instead of raising <code>DB::NoResultsError</code>.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/query_builder/executor.cr","line_number":42,"url":null},"def":{"name":"exec","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"begin\n  exec!\nrescue DB::NoResultsError\n  nil\nend"}},{"id":"exec!-instance-method","html_id":"exec!-instance-method","name":"exec!","doc":"Executes current built query that is expected to return an `DB::ExecResult`.","summary":"<p>Executes current built query that is expected to return an <code>DB::ExecResult</code>.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/query_builder/executor.cr","line_number":22,"url":null},"def":{"name":"exec!","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"query_method = @builder.query_method\nsql, args = @builder.build\ner = @db.exec(sql, args: args)\nif (((((query_method == (:insert)) || (query_method == (:update_one))) || (query_method == (:update))) || (query_method == (:delete_one))) || (query_method == (:delete))) && (er.rows_affected == 0)\n  raise(DB::NoResultsError.new(\"DB::ExecResult: No rows affected\"))\nend\ner\n"}},{"id":"query-instance-method","html_id":"query-instance-method","name":"query","doc":"Executes current built query that is expected to return one or more results.\n\n```\ntests = [] of Array(String | Int32)\nrs = query.find(:tests).select(:name, :age).query\n\nbegin\n  while rs.move_next\n    name = rs.read(String)\n    age = rs.read(Int32)\n    tests << [name, age]\n  end\nensure\n  rs.close\nend\n```","summary":"<p>Executes current built query that is expected to return one or more results.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/query_builder/executor.cr","line_number":64,"url":null},"def":{"name":"query","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"sql, args = @builder.build\n@db.query(sql, args: args)\n"}},{"id":"query(&)-instance-method","html_id":"query(&)-instance-method","name":"query","doc":"Executes current built query and yields a `DB::ResultSet` with the results.\nThe `DB::ResultSet` is closed automatically.\n\n```\ntests = [] of Array(String | Int32)\nquery.find(:tests).select(:name, :age).query do |rs|\n  rs.each do\n    name = rs.read(String)\n    age = rs.read(Int32)\n    tests << [name, age]\n  end\nend\n```","summary":"<p>Executes current built query and yields a <code>DB::ResultSet</code> with the results.</p>","abstract":false,"args":[],"args_string":"(&)","args_html":"(&)","location":{"filename":"src/query_builder/executor.cr","line_number":82,"url":null},"def":{"name":"query","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"sql, args = @builder.build\n@db.query(sql, args: args) do |rs|\n  yield rs\nend\n"}},{"id":"query_all(astypes)-instance-method","html_id":"query_all(astypes)-instance-method","name":"query_all","doc":"Executes current built query that is expected to return one result.","summary":"<p>Executes current built query that is expected to return one result.</p>","abstract":false,"args":[{"name":"types","doc":null,"default_value":"","external_name":"as","restriction":""}],"args_string":"(as types)","args_html":"(as types)","location":{"filename":"src/query_builder/executor.cr","line_number":88,"url":null},"def":{"name":"query_all","args":[{"name":"types","doc":null,"default_value":"","external_name":"as","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"sql, args = @builder.build\n@db.query_all(sql, args: args, as: types)\n"}},{"id":"query_all(&)-instance-method","html_id":"query_all(&)-instance-method","name":"query_all","doc":"Executes current built query and yields a `DB::ResultSet` positioned\nat the beginning of each row, returning an `Array` of the values of the blocks.","summary":"<p>Executes current built query and yields a <code>DB::ResultSet</code> positioned at the beginning of each row, returning an <code>Array</code> of the values of the blocks.</p>","abstract":false,"args":[],"args_string":"(&)","args_html":"(&)","location":{"filename":"src/query_builder/executor.cr","line_number":95,"url":null},"def":{"name":"query_all","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"sql, args = @builder.build\n@db.query_all(sql, args: args) do |rs|\n  yield rs\nend\n"}},{"id":"query_each(&)-instance-method","html_id":"query_each(&)-instance-method","name":"query_each","doc":"Executes current built query and yields the `DB::ResultSet` once per each row.","summary":"<p>Executes current built query and yields the <code>DB::ResultSet</code> once per each row.</p>","abstract":false,"args":[],"args_string":"(&)","args_html":"(&)","location":{"filename":"src/query_builder/executor.cr","line_number":101,"url":null},"def":{"name":"query_each","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"sql, args = @builder.build\n@db.query_each(sql, args: args) do |rs|\n  yield rs\nend\n"}},{"id":"query_one(astypes)-instance-method","html_id":"query_one(astypes)-instance-method","name":"query_one","doc":":ditto:\nIf no result found, this method returns `nil` instead of raising `DB::NoResultsError`.","summary":"<p>:ditto: If no result found, this method returns <code>nil</code> instead of raising <code>DB::NoResultsError</code>.</p>","abstract":false,"args":[{"name":"types","doc":null,"default_value":"","external_name":"as","restriction":""}],"args_string":"(as types)","args_html":"(as types)","location":{"filename":"src/query_builder/executor.cr","line_number":114,"url":null},"def":{"name":"query_one","args":[{"name":"types","doc":null,"default_value":"","external_name":"as","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"begin\n  query_one!(types)\nrescue DB::NoResultsError\n  nil\nend"}},{"id":"query_one(&)-instance-method","html_id":"query_one(&)-instance-method","name":"query_one","doc":":ditto:\nIf no result found, this method returns `nil` instead of raising `DB::NoResultsError`.","summary":"<p>:ditto: If no result found, this method returns <code>nil</code> instead of raising <code>DB::NoResultsError</code>.</p>","abstract":false,"args":[],"args_string":"(&)","args_html":"(&)","location":{"filename":"src/query_builder/executor.cr","line_number":129,"url":null},"def":{"name":"query_one","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"begin\n  query_one! do |rs|\n    yield rs\n  end\nrescue DB::NoResultsError\n  nil\nend"}},{"id":"query_one!(astypes)-instance-method","html_id":"query_one!(astypes)-instance-method","name":"query_one!","doc":"Executes current built query that is expected to return one result.","summary":"<p>Executes current built query that is expected to return one result.</p>","abstract":false,"args":[{"name":"types","doc":null,"default_value":"","external_name":"as","restriction":""}],"args_string":"(as types)","args_html":"(as types)","location":{"filename":"src/query_builder/executor.cr","line_number":107,"url":null},"def":{"name":"query_one!","args":[{"name":"types","doc":null,"default_value":"","external_name":"as","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"sql, args = @builder.build\n@db.query_one(sql, args: args, as: types)\n"}},{"id":"query_one!(&)-instance-method","html_id":"query_one!(&)-instance-method","name":"query_one!","doc":"Executes current built query that expects at most a single row and yields\na `DB::ResultSet` positioned at that first row.","summary":"<p>Executes current built query that expects at most a single row and yields a <code>DB::ResultSet</code> positioned at that first row.</p>","abstract":false,"args":[],"args_string":"(&)","args_html":"(&)","location":{"filename":"src/query_builder/executor.cr","line_number":122,"url":null},"def":{"name":"query_one!","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"sql, args = @builder.build\n@db.query_one(sql, args: args) do |rs|\n  yield rs\nend\n"}},{"id":"raw_query(&):Query-instance-method","html_id":"raw_query(&):Query-instance-method","name":"raw_query","doc":"See `DBX::QueryBuilder#query`","summary":"<p>See <code><a href=\"../DBX/QueryBuilder.html#query(&):QueryBuilder-instance-method\">DBX::QueryBuilder#query</a></code></p>","abstract":false,"args":[],"args_string":"(&) : Query","args_html":"(&) : <a href=\"../DBX/Query.html\">Query</a>","location":{"filename":"src/query_builder/executor.cr","line_number":161,"url":null},"def":{"name":"raw_query","args":[],"double_splat":null,"splat_index":null,"yields":0,"block_arg":null,"return_type":"Query","visibility":"Public","body":"@builder.query do\n  with QueryBuilderScope.new(@builder) yield\nend\nself\n"}},{"id":"scalar-instance-method","html_id":"scalar-instance-method","name":"scalar","doc":":ditto:\nIf no result found, this method returns `nil` instead of raising `DB::NoResultsError`.\nSo the type MUST be nillable:\n\n```\nquery\n  .find(:tests)\n  .select(:name)\n  .where(:name, \"Terminator\")\n  .scalar\n  .as(String?)\n# => String | Nil\n```","summary":"<p>:ditto: If no result found, this method returns <code>nil</code> instead of raising <code>DB::NoResultsError</code>.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/query_builder/executor.cr","line_number":154,"url":null},"def":{"name":"scalar","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"begin\n  scalar!\nrescue DB::NoResultsError\n  nil\nend"}},{"id":"scalar!-instance-method","html_id":"scalar!-instance-method","name":"scalar!","doc":"Executes current built query and returns a single scalar value.","summary":"<p>Executes current built query and returns a single scalar value.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/query_builder/executor.cr","line_number":136,"url":null},"def":{"name":"scalar!","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"sql, args = @builder.build\n@db.scalar(sql, args: args)\n"}},{"id":"to_a(astypes)-instance-method","html_id":"to_a(astypes)-instance-method","name":"to_a","doc":"Shortcut, same as `query_all(types)`.","summary":"<p>Shortcut, same as <code><a href=\"../DBX/Query.html#query_all(astypes)-instance-method\">#query_all(types)</a></code>.</p>","abstract":false,"args":[{"name":"types","doc":null,"default_value":"","external_name":"as","restriction":""}],"args_string":"(as types)","args_html":"(as types)","location":{"filename":"src/query_builder/executor.cr","line_number":229,"url":null},"def":{"name":"to_a","args":[{"name":"types","doc":null,"default_value":"","external_name":"as","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"query_all(types)"}},{"id":"to_a(&)-instance-method","html_id":"to_a(&)-instance-method","name":"to_a","doc":"Shortcut, same as `query_all(&block)`.","summary":"<p>Shortcut, same as <code><a href=\"../DBX/Query.html#query_all(astypes)-instance-method\">#query_all(&block)</a></code>.</p>","abstract":false,"args":[],"args_string":"(&)","args_html":"(&)","location":{"filename":"src/query_builder/executor.cr","line_number":234,"url":null},"def":{"name":"to_a","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"query_all do |rs|\n  yield rs\nend"}},{"id":"to_o(astypes)-instance-method","html_id":"to_o(astypes)-instance-method","name":"to_o","doc":"Shortcut, same as `query_one(types)`.","summary":"<p>Shortcut, same as <code><a href=\"../DBX/Query.html#query_one(astypes)-instance-method\">#query_one(types)</a></code>.</p>","abstract":false,"args":[{"name":"types","doc":null,"default_value":"","external_name":"as","restriction":""}],"args_string":"(as types)","args_html":"(as types)","location":{"filename":"src/query_builder/executor.cr","line_number":214,"url":null},"def":{"name":"to_o","args":[{"name":"types","doc":null,"default_value":"","external_name":"as","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"query_one(types)"}},{"id":"to_o(&)-instance-method","html_id":"to_o(&)-instance-method","name":"to_o","doc":"Shortcut, same as `query_one(&block)`.","summary":"<p>Shortcut, same as <code><a href=\"../DBX/Query.html#query_one(astypes)-instance-method\">#query_one(&block)</a></code>.</p>","abstract":false,"args":[],"args_string":"(&)","args_html":"(&)","location":{"filename":"src/query_builder/executor.cr","line_number":224,"url":null},"def":{"name":"to_o","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"query_one do |rs|\n  yield rs\nend"}},{"id":"to_o!(astypes)-instance-method","html_id":"to_o!(astypes)-instance-method","name":"to_o!","doc":"Shortcut, same as `query_one!(types)`.","summary":"<p>Shortcut, same as <code><a href=\"../DBX/Query.html#query_one!(astypes)-instance-method\">#query_one!(types)</a></code>.</p>","abstract":false,"args":[{"name":"types","doc":null,"default_value":"","external_name":"as","restriction":""}],"args_string":"(as types)","args_html":"(as types)","location":{"filename":"src/query_builder/executor.cr","line_number":209,"url":null},"def":{"name":"to_o!","args":[{"name":"types","doc":null,"default_value":"","external_name":"as","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"query_one!(types)"}},{"id":"to_o!(&)-instance-method","html_id":"to_o!(&)-instance-method","name":"to_o!","doc":"Shortcut, same as `query_one!(&block)`.","summary":"<p>Shortcut, same as <code><a href=\"../DBX/Query.html#query_one!(astypes)-instance-method\">#query_one!(&block)</a></code>.</p>","abstract":false,"args":[],"args_string":"(&)","args_html":"(&)","location":{"filename":"src/query_builder/executor.cr","line_number":219,"url":null},"def":{"name":"to_o!","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"query_one! do |rs|\n  yield rs\nend"}}],"macros":[{"id":"method_missing(call)-macro","html_id":"method_missing(call)-macro","name":"method_missing","doc":null,"summary":null,"abstract":false,"args":[{"name":"call","doc":null,"default_value":"","external_name":"call","restriction":""}],"args_string":"(call)","location":{"filename":"src/query_builder/executor.cr","line_number":238,"url":null},"def":{"name":"method_missing","args":[{"name":"call","doc":null,"default_value":"","external_name":"call","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"      \n{% if true %}\n        # See `DBX::QueryBuilder#{{ call.name }}` method.\n        def {{ call.name.id }}({{ call.args.splat }}) : DBX::Query\n          @builder.{{ call.name.id }}({{ call.args.splat }})\n          self\n        end\n      {% end %}\n\n    \n"}}],"types":[]},{"html_id":"dbx/DBX/QueryBuilder","path":"DBX/QueryBuilder.html","kind":"class","full_name":"DBX::QueryBuilder","name":"QueryBuilder","abstract":false,"superclass":{"html_id":"dbx/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"dbx/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"dbx/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"dbx","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[{"id":"QUOTE","name":"QUOTE","value":"'\"'","doc":"Quoting character.","summary":"<p>Quoting character.</p>"}],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"dbx/DBX/Adapter/PGQueryBuilder","kind":"class","full_name":"DBX::Adapter::PGQueryBuilder","name":"PGQueryBuilder"},{"html_id":"dbx/DBX/Adapter/SQLiteQueryBuilder","kind":"class","full_name":"DBX::Adapter::SQLiteQueryBuilder","name":"SQLiteQueryBuilder"}],"including_types":[],"namespace":{"html_id":"dbx/DBX","kind":"module","full_name":"DBX","name":"DBX"},"doc":"Query builder.","summary":"<p>Query builder.</p>","class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":"Creates a new `QueryBuilder`.","summary":"<p>Creates a new <code><a href=\"../DBX/QueryBuilder.html\">QueryBuilder</a></code>.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/query_builder/builder_criteria.cr","line_number":30,"url":null},"def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"add_arg(value):String-instance-method","html_id":"add_arg(value):String-instance-method","name":"add_arg","doc":"Adds value to *args* and returns the `placeholder`.","summary":"<p>Adds value to <em>args</em> and returns the <code>placeholder</code>.</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value) : String","args_html":"(value) : String","location":{"filename":"src/query_builder/builder_support.cr","line_number":49,"url":null},"def":{"name":"add_arg","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"if value.is_a?(Symbol)\n  value = value.to_s\nend\n@args << value\nph(@args.size)\n"}},{"id":"add_args_and_fields_from_data(data:NamedTuple|Hash,sep=&quot;,&quot;):String-instance-method","html_id":"add_args_and_fields_from_data(data:NamedTuple|Hash,sep=&quot;,&quot;):String-instance-method","name":"add_args_and_fields_from_data","doc":"Extracts arguments and fields from data, populates `args`\nand returns SQL part for a listing statement.\nExample: `field1, field2, field3`","summary":"<p>Extracts arguments and fields from data, populates <code>args</code> and returns SQL part for a listing statement.</p>","abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"NamedTuple | Hash"},{"name":"sep","doc":null,"default_value":"\", \"","external_name":"sep","restriction":""}],"args_string":"(data : NamedTuple | Hash, sep = <span class=\"s\">&quot;, &quot;</span>) : String","args_html":"(data : NamedTuple | Hash, sep = <span class=\"s\">&quot;, &quot;</span>) : String","location":{"filename":"src/query_builder/builder_support.cr","line_number":58,"url":null},"def":{"name":"add_args_and_fields_from_data","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"NamedTuple | Hash"},{"name":"sep","doc":null,"default_value":"\", \"","external_name":"sep","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"data.map do |_, value|\n  add_arg(value)\nend.join(sep)"}},{"id":"add_args_and_fields_from_data(data:Array,sep=&quot;,&quot;):String-instance-method","html_id":"add_args_and_fields_from_data(data:Array,sep=&quot;,&quot;):String-instance-method","name":"add_args_and_fields_from_data","doc":"Extracts arguments and fields from data, populates `args`\nand returns SQL part for a listing statement.\nExample: `field1, field2, field3`","summary":"<p>Extracts arguments and fields from data, populates <code>args</code> and returns SQL part for a listing statement.</p>","abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Array"},{"name":"sep","doc":null,"default_value":"\", \"","external_name":"sep","restriction":""}],"args_string":"(data : Array, sep = <span class=\"s\">&quot;, &quot;</span>) : String","args_html":"(data : Array, sep = <span class=\"s\">&quot;, &quot;</span>) : String","location":{"filename":"src/query_builder/builder_support.cr","line_number":63,"url":null},"def":{"name":"add_args_and_fields_from_data","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Array"},{"name":"sep","doc":null,"default_value":"\", \"","external_name":"sep","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"data.map do |value|\n  add_arg(value)\nend.join(sep)"}},{"id":"add_args_and_kv_from_data(data:NamedTuple|Hash,sep=&quot;,&quot;):String-instance-method","html_id":"add_args_and_kv_from_data(data:NamedTuple|Hash,sep=&quot;,&quot;):String-instance-method","name":"add_args_and_kv_from_data","doc":"Extracts arguments and fields from data, populates `args`\nand returns SQL part for a combined statement.\nExample: `field1 = $1, field2 = $2, field3 = $3`","summary":"<p>Extracts arguments and fields from data, populates <code>args</code> and returns SQL part for a combined statement.</p>","abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"NamedTuple | Hash"},{"name":"sep","doc":null,"default_value":"\", \"","external_name":"sep","restriction":""}],"args_string":"(data : NamedTuple | Hash, sep = <span class=\"s\">&quot;, &quot;</span>) : String","args_html":"(data : NamedTuple | Hash, sep = <span class=\"s\">&quot;, &quot;</span>) : String","location":{"filename":"src/query_builder/builder_support.cr","line_number":70,"url":null},"def":{"name":"add_args_and_kv_from_data","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"NamedTuple | Hash"},{"name":"sep","doc":null,"default_value":"\", \"","external_name":"sep","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"data.map do |field, value|\n  \"#{quote(field)} = #{add_arg(value)}\"\nend.join(sep)"}},{"id":"alter(table:OneOrMoreFieldsType,command:String,field:String,data_type=&quot;&quot;):QueryBuilder-instance-method","html_id":"alter(table:OneOrMoreFieldsType,command:String,field:String,data_type=&quot;&quot;):QueryBuilder-instance-method","name":"alter","doc":null,"summary":null,"abstract":false,"args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":"OneOrMoreFieldsType"},{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"String"},{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"String"},{"name":"data_type","doc":null,"default_value":"\"\"","external_name":"data_type","restriction":""}],"args_string":"(table : OneOrMoreFieldsType, command : String, field : String, data_type = <span class=\"s\">&quot;&quot;</span>) : QueryBuilder","args_html":"(table : <a href=\"../DBX/QueryBuilder/OneOrMoreFieldsType.html\">OneOrMoreFieldsType</a>, command : String, field : String, data_type = <span class=\"s\">&quot;&quot;</span>) : <a href=\"../DBX/QueryBuilder.html\">QueryBuilder</a>","location":{"filename":"src/query_builder/builder.cr","line_number":212,"url":null},"def":{"name":"alter","args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":"OneOrMoreFieldsType"},{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"String"},{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"String"},{"name":"data_type","doc":null,"default_value":"\"\"","external_name":"data_type","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"QueryBuilder","visibility":"Public","body":"alter(command, field, data_type)\ntable(table)\n"}},{"id":"alter(command:String,field:String,data_type=&quot;&quot;):QueryBuilder-instance-method","html_id":"alter(command:String,field:String,data_type=&quot;&quot;):QueryBuilder-instance-method","name":"alter","doc":null,"summary":null,"abstract":false,"args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"String"},{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"String"},{"name":"data_type","doc":null,"default_value":"\"\"","external_name":"data_type","restriction":""}],"args_string":"(command : String, field : String, data_type = <span class=\"s\">&quot;&quot;</span>) : QueryBuilder","args_html":"(command : String, field : String, data_type = <span class=\"s\">&quot;&quot;</span>) : <a href=\"../DBX/QueryBuilder.html\">QueryBuilder</a>","location":{"filename":"src/query_builder/builder.cr","line_number":206,"url":null},"def":{"name":"alter","args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"String"},{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"String"},{"name":"data_type","doc":null,"default_value":"\"\"","external_name":"data_type","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"QueryBuilder","visibility":"Public","body":"@query_method = :alter\n@options = {command: command, field: field, data_type: data_type}\nself\n"}},{"id":"analyze(table:OneOrMoreFieldsType):QueryBuilder-instance-method","html_id":"analyze(table:OneOrMoreFieldsType):QueryBuilder-instance-method","name":"analyze","doc":"Builds the `ANALYZE` query","summary":"<p>Builds the <code>ANALYZE</code> query</p>","abstract":false,"args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":"OneOrMoreFieldsType"}],"args_string":"(table : OneOrMoreFieldsType) : QueryBuilder","args_html":"(table : <a href=\"../DBX/QueryBuilder/OneOrMoreFieldsType.html\">OneOrMoreFieldsType</a>) : <a href=\"../DBX/QueryBuilder.html\">QueryBuilder</a>","location":{"filename":"src/query_builder/builder.cr","line_number":240,"url":null},"def":{"name":"analyze","args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":"OneOrMoreFieldsType"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"QueryBuilder","visibility":"Public","body":"analyze\ntable(table)\n"}},{"id":"analyze:QueryBuilder-instance-method","html_id":"analyze:QueryBuilder-instance-method","name":"analyze","doc":"Builds the `ANALYZE` query","summary":"<p>Builds the <code>ANALYZE</code> query</p>","abstract":false,"args":[],"args_string":" : QueryBuilder","args_html":" : <a href=\"../DBX/QueryBuilder.html\">QueryBuilder</a>","location":{"filename":"src/query_builder/builder.cr","line_number":240,"url":null},"def":{"name":"analyze","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"QueryBuilder","visibility":"Public","body":"@query_method = :analyze\nself\n"}},{"id":"avg(field:FieldType,name=nil):QueryBuilder-instance-method","html_id":"avg(field:FieldType,name=nil):QueryBuilder-instance-method","name":"avg","doc":"Adds `AVG` to the current query.","summary":"<p>Adds <code>AVG</code> to the current query.</p>","abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"FieldType"},{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(field : FieldType, name = <span class=\"n\">nil</span>) : QueryBuilder","args_html":"(field : <a href=\"../DBX/QueryBuilder/FieldType.html\">FieldType</a>, name = <span class=\"n\">nil</span>) : <a href=\"../DBX/QueryBuilder.html\">QueryBuilder</a>","location":{"filename":"src/query_builder/builder_criteria.cr","line_number":171,"url":null},"def":{"name":"avg","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"FieldType"},{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"QueryBuilder","visibility":"Public","body":"avg = \"AVG(#{field})\"\nif !name.nil?\n  avg = avg + \" AS #{quote(name)}\"\nend\n@select = (@select.compare(\"*\")) == 0 ? avg : \"#{@select}, #{avg}\"\nself\n"}},{"id":"between(field:FieldType,value1,value2,type=&quot;&quot;,and_or=&quot;AND&quot;):QueryBuilder-instance-method","html_id":"between(field:FieldType,value1,value2,type=&quot;&quot;,and_or=&quot;AND&quot;):QueryBuilder-instance-method","name":"between","doc":null,"summary":null,"abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"FieldType"},{"name":"value1","doc":null,"default_value":"","external_name":"value1","restriction":""},{"name":"value2","doc":null,"default_value":"","external_name":"value2","restriction":""},{"name":"type","doc":null,"default_value":"\"\"","external_name":"type","restriction":""},{"name":"and_or","doc":null,"default_value":"\"AND\"","external_name":"and_or","restriction":""}],"args_string":"(field : FieldType, value1, value2, type = <span class=\"s\">&quot;&quot;</span>, and_or = <span class=\"s\">&quot;AND&quot;</span>) : QueryBuilder","args_html":"(field : <a href=\"../DBX/QueryBuilder/FieldType.html\">FieldType</a>, value1, value2, type = <span class=\"s\">&quot;&quot;</span>, and_or = <span class=\"s\">&quot;AND&quot;</span>) : <a href=\"../DBX/QueryBuilder.html\">QueryBuilder</a>","location":{"filename":"src/query_builder/builder_criteria.cr","line_number":316,"url":null},"def":{"name":"between","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"FieldType"},{"name":"value1","doc":null,"default_value":"","external_name":"value1","restriction":""},{"name":"value2","doc":null,"default_value":"","external_name":"value2","restriction":""},{"name":"type","doc":null,"default_value":"\"\"","external_name":"type","restriction":""},{"name":"and_or","doc":null,"default_value":"\"AND\"","external_name":"and_or","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"QueryBuilder","visibility":"Public","body":"@where = @where + (if @where.empty?\n  \"#{quote(field)} #{type}BETWEEN #{add_arg(value1)} AND #{add_arg(value2)}\"\nelse\n  \" #{and_or} #{quote(field)} #{type}BETWEEN #{add_arg(value1)} AND #{add_arg(value2)}\"\nend)\nself\n"}},{"id":"build:SQLandArgsType-instance-method","html_id":"build:SQLandArgsType-instance-method","name":"build","doc":"Builds the current query and returns SQL (string) and arguments (array).\n\n```\nsql, args = builder.build\n```","summary":"<p>Builds the current query and returns SQL (string) and arguments (array).</p>","abstract":false,"args":[],"args_string":" : SQLandArgsType","args_html":" : <a href=\"../DBX/QueryBuilder/SQLandArgsType.html\">SQLandArgsType</a>","location":{"filename":"src/query_builder/builder.cr","line_number":34,"url":null},"def":{"name":"build","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"SQLandArgsType","visibility":"Public","body":"{% if true %}\n        case @query_method\n        {% for method in [:find, :insert, :update, :delete, :drop, :alter, :query, :analyze, :check, :checksum, :optimize, :repair] %}\n          when :{{ method.id }} then end_query(build_query_{{ method.id }})\n        {% end %}\n          when :update_one then end_query(build_query_update)\n          when :delete_one then end_query(build_query_delete)\n        else\n          raise Error.new \"Bad QueryBuilder method. #{@query_method}\"\n        end\n      {% end %}"}},{"id":"check:QueryBuilder-instance-method","html_id":"check:QueryBuilder-instance-method","name":"check","doc":"Builds the `CHECK` query","summary":"<p>Builds the <code>CHECK</code> query</p>","abstract":false,"args":[],"args_string":" : QueryBuilder","args_html":" : <a href=\"../DBX/QueryBuilder.html\">QueryBuilder</a>","location":{"filename":"src/query_builder/builder.cr","line_number":240,"url":null},"def":{"name":"check","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"QueryBuilder","visibility":"Public","body":"@query_method = :check\nself\n"}},{"id":"check(table:OneOrMoreFieldsType):QueryBuilder-instance-method","html_id":"check(table:OneOrMoreFieldsType):QueryBuilder-instance-method","name":"check","doc":"Builds the `CHECK` query","summary":"<p>Builds the <code>CHECK</code> query</p>","abstract":false,"args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":"OneOrMoreFieldsType"}],"args_string":"(table : OneOrMoreFieldsType) : QueryBuilder","args_html":"(table : <a href=\"../DBX/QueryBuilder/OneOrMoreFieldsType.html\">OneOrMoreFieldsType</a>) : <a href=\"../DBX/QueryBuilder.html\">QueryBuilder</a>","location":{"filename":"src/query_builder/builder.cr","line_number":240,"url":null},"def":{"name":"check","args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":"OneOrMoreFieldsType"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"QueryBuilder","visibility":"Public","body":"check\ntable(table)\n"}},{"id":"checksum:QueryBuilder-instance-method","html_id":"checksum:QueryBuilder-instance-method","name":"checksum","doc":"Builds the `CHECKSUM` query","summary":"<p>Builds the <code>CHECKSUM</code> query</p>","abstract":false,"args":[],"args_string":" : QueryBuilder","args_html":" : <a href=\"../DBX/QueryBuilder.html\">QueryBuilder</a>","location":{"filename":"src/query_builder/builder.cr","line_number":240,"url":null},"def":{"name":"checksum","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"QueryBuilder","visibility":"Public","body":"@query_method = :checksum\nself\n"}},{"id":"checksum(table:OneOrMoreFieldsType):QueryBuilder-instance-method","html_id":"checksum(table:OneOrMoreFieldsType):QueryBuilder-instance-method","name":"checksum","doc":"Builds the `CHECKSUM` query","summary":"<p>Builds the <code>CHECKSUM</code> query</p>","abstract":false,"args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":"OneOrMoreFieldsType"}],"args_string":"(table : OneOrMoreFieldsType) : QueryBuilder","args_html":"(table : <a href=\"../DBX/QueryBuilder/OneOrMoreFieldsType.html\">OneOrMoreFieldsType</a>) : <a href=\"../DBX/QueryBuilder.html\">QueryBuilder</a>","location":{"filename":"src/query_builder/builder.cr","line_number":240,"url":null},"def":{"name":"checksum","args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":"OneOrMoreFieldsType"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"QueryBuilder","visibility":"Public","body":"checksum\ntable(table)\n"}},{"id":"count(field:FieldType,name=nil):QueryBuilder-instance-method","html_id":"count(field:FieldType,name=nil):QueryBuilder-instance-method","name":"count","doc":"Adds `COUNT` to the current query.","summary":"<p>Adds <code>COUNT</code> to the current query.</p>","abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"FieldType"},{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(field : FieldType, name = <span class=\"n\">nil</span>) : QueryBuilder","args_html":"(field : <a href=\"../DBX/QueryBuilder/FieldType.html\">FieldType</a>, name = <span class=\"n\">nil</span>) : <a href=\"../DBX/QueryBuilder.html\">QueryBuilder</a>","location":{"filename":"src/query_builder/builder_criteria.cr","line_number":171,"url":null},"def":{"name":"count","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"FieldType"},{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"QueryBuilder","visibility":"Public","body":"count = \"COUNT(#{field})\"\nif !name.nil?\n  count = count + \" AS #{quote(name)}\"\nend\n@select = (@select.compare(\"*\")) == 0 ? count : \"#{@select}, #{count}\"\nself\n"}},{"id":"delete:QueryBuilder-instance-method","html_id":"delete:QueryBuilder-instance-method","name":"delete","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : QueryBuilder","args_html":" : <a href=\"../DBX/QueryBuilder.html\">QueryBuilder</a>","location":{"filename":"src/query_builder/builder.cr","line_number":165,"url":null},"def":{"name":"delete","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"QueryBuilder","visibility":"Public","body":"@query_method = :delete\nself\n"}},{"id":"delete(table:OneOrMoreFieldsType):QueryBuilder-instance-method","html_id":"delete(table:OneOrMoreFieldsType):QueryBuilder-instance-method","name":"delete","doc":null,"summary":null,"abstract":false,"args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":"OneOrMoreFieldsType"}],"args_string":"(table : OneOrMoreFieldsType) : QueryBuilder","args_html":"(table : <a href=\"../DBX/QueryBuilder/OneOrMoreFieldsType.html\">OneOrMoreFieldsType</a>) : <a href=\"../DBX/QueryBuilder.html\">QueryBuilder</a>","location":{"filename":"src/query_builder/builder.cr","line_number":170,"url":null},"def":{"name":"delete","args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":"OneOrMoreFieldsType"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"QueryBuilder","visibility":"Public","body":"delete\ntable(table)\n"}},{"id":"delete(pk_name,pk_value):QueryBuilder-instance-method","html_id":"delete(pk_name,pk_value):QueryBuilder-instance-method","name":"delete","doc":null,"summary":null,"abstract":false,"args":[{"name":"pk_name","doc":null,"default_value":"","external_name":"pk_name","restriction":""},{"name":"pk_value","doc":null,"default_value":"","external_name":"pk_value","restriction":""}],"args_string":"(pk_name, pk_value) : QueryBuilder","args_html":"(pk_name, pk_value) : <a href=\"../DBX/QueryBuilder.html\">QueryBuilder</a>","location":{"filename":"src/query_builder/builder.cr","line_number":175,"url":null},"def":{"name":"delete","args":[{"name":"pk_name","doc":null,"default_value":"","external_name":"pk_name","restriction":""},{"name":"pk_value","doc":null,"default_value":"","external_name":"pk_value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"QueryBuilder","visibility":"Public","body":"delete\n@query_method = :delete_one\nself.where(pk_name, pk_value)\n"}},{"id":"drop(table:OneOrMoreFieldsType,check_exists=true):QueryBuilder-instance-method","html_id":"drop(table:OneOrMoreFieldsType,check_exists=true):QueryBuilder-instance-method","name":"drop","doc":null,"summary":null,"abstract":false,"args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":"OneOrMoreFieldsType"},{"name":"check_exists","doc":null,"default_value":"true","external_name":"check_exists","restriction":""}],"args_string":"(table : OneOrMoreFieldsType, check_exists = <span class=\"n\">true</span>) : QueryBuilder","args_html":"(table : <a href=\"../DBX/QueryBuilder/OneOrMoreFieldsType.html\">OneOrMoreFieldsType</a>, check_exists = <span class=\"n\">true</span>) : <a href=\"../DBX/QueryBuilder.html\">QueryBuilder</a>","location":{"filename":"src/query_builder/builder.cr","line_number":195,"url":null},"def":{"name":"drop","args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":"OneOrMoreFieldsType"},{"name":"check_exists","doc":null,"default_value":"true","external_name":"check_exists","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"QueryBuilder","visibility":"Public","body":"drop(check_exists)\ntable(table)\n"}},{"id":"drop(check_exists=true):QueryBuilder-instance-method","html_id":"drop(check_exists=true):QueryBuilder-instance-method","name":"drop","doc":null,"summary":null,"abstract":false,"args":[{"name":"check_exists","doc":null,"default_value":"true","external_name":"check_exists","restriction":""}],"args_string":"(check_exists = <span class=\"n\">true</span>) : QueryBuilder","args_html":"(check_exists = <span class=\"n\">true</span>) : <a href=\"../DBX/QueryBuilder.html\">QueryBuilder</a>","location":{"filename":"src/query_builder/builder.cr","line_number":189,"url":null},"def":{"name":"drop","args":[{"name":"check_exists","doc":null,"default_value":"true","external_name":"check_exists","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"QueryBuilder","visibility":"Public","body":"@query_method = :drop\n@options = check_exists\nself\n"}},{"id":"find(pk_name,pk_value):QueryBuilder-instance-method","html_id":"find(pk_name,pk_value):QueryBuilder-instance-method","name":"find","doc":"Finds one resource by its primary key.\n\nSame as:\n\n```\nbuilder.find.where(pk_name, pk_value)\n```","summary":"<p>Finds one resource by its primary key.</p>","abstract":false,"args":[{"name":"pk_name","doc":null,"default_value":"","external_name":"pk_name","restriction":""},{"name":"pk_value","doc":null,"default_value":"","external_name":"pk_value","restriction":""}],"args_string":"(pk_name, pk_value) : QueryBuilder","args_html":"(pk_name, pk_value) : <a href=\"../DBX/QueryBuilder.html\">QueryBuilder</a>","location":{"filename":"src/query_builder/builder.cr","line_number":101,"url":null},"def":{"name":"find","args":[{"name":"pk_name","doc":null,"default_value":"","external_name":"pk_name","restriction":""},{"name":"pk_value","doc":null,"default_value":"","external_name":"pk_value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"QueryBuilder","visibility":"Public","body":"find.where(pk_name, pk_value)"}},{"id":"find:QueryBuilder-instance-method","html_id":"find:QueryBuilder-instance-method","name":"find","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : QueryBuilder","args_html":" : <a href=\"../DBX/QueryBuilder.html\">QueryBuilder</a>","location":{"filename":"src/query_builder/builder.cr","line_number":63,"url":null},"def":{"name":"find","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"QueryBuilder","visibility":"Public","body":"@query_method = :find\nself\n"}},{"id":"find(&):QueryBuilder-instance-method","html_id":"find(&):QueryBuilder-instance-method","name":"find","doc":"Adds `find` to current query\nand defines in raw form the SQL statement of the table(s).\n> Be careful, you have to manage arguments (`arg`) and quotes (`q`).\n\nExample:\n\n```\nbuilder.find { \"#{q(\"posts\") AS p, articles a\" }\"\n```\n\nGenerates:\n\n```\nSELECT * FROM \"posts\" AS p, articles a\n```","summary":"<p>Adds <code><a href=\"../DBX/QueryBuilder.html#find:QueryBuilder-instance-method\">#find</a></code> to current query and defines in raw form the SQL statement of the table(s).</p>","abstract":false,"args":[],"args_string":"(&) : QueryBuilder","args_html":"(&) : <a href=\"../DBX/QueryBuilder.html\">QueryBuilder</a>","location":{"filename":"src/query_builder/builder.cr","line_number":88,"url":null},"def":{"name":"find","args":[],"double_splat":null,"splat_index":null,"yields":0,"block_arg":null,"return_type":"QueryBuilder","visibility":"Public","body":"find\n@table = \"#{with QueryBuilderScope.new(self) yield}\"\nself\n"}},{"id":"find(table_name:OneOrMoreFieldsType):QueryBuilder-instance-method","html_id":"find(table_name:OneOrMoreFieldsType):QueryBuilder-instance-method","name":"find","doc":null,"summary":null,"abstract":false,"args":[{"name":"table_name","doc":null,"default_value":"","external_name":"table_name","restriction":"OneOrMoreFieldsType"}],"args_string":"(table_name : OneOrMoreFieldsType) : QueryBuilder","args_html":"(table_name : <a href=\"../DBX/QueryBuilder/OneOrMoreFieldsType.html\">OneOrMoreFieldsType</a>) : <a href=\"../DBX/QueryBuilder.html\">QueryBuilder</a>","location":{"filename":"src/query_builder/builder.cr","line_number":68,"url":null},"def":{"name":"find","args":[{"name":"table_name","doc":null,"default_value":"","external_name":"table_name","restriction":"OneOrMoreFieldsType"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"QueryBuilder","visibility":"Public","body":"find\ntable(table_name)\n"}},{"id":"full_join(table:FieldType,field1:FieldType,field2:FieldType?=nil):QueryBuilder-instance-method","html_id":"full_join(table:FieldType,field1:FieldType,field2:FieldType?=nil):QueryBuilder-instance-method","name":"full_join","doc":"Adds `FULL JOIN` to the current query.","summary":"<p>Adds <code>FULL JOIN</code> to the current query.</p>","abstract":false,"args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":"FieldType"},{"name":"field1","doc":null,"default_value":"","external_name":"field1","restriction":"FieldType"},{"name":"field2","doc":null,"default_value":"nil","external_name":"field2","restriction":"FieldType | ::Nil"}],"args_string":"(table : FieldType, field1 : FieldType, field2 : FieldType? = <span class=\"n\">nil</span>) : QueryBuilder","args_html":"(table : <a href=\"../DBX/QueryBuilder/FieldType.html\">FieldType</a>, field1 : <a href=\"../DBX/QueryBuilder/FieldType.html\">FieldType</a>, field2 : <a href=\"../DBX/QueryBuilder/FieldType.html\">FieldType</a>? = <span class=\"n\">nil</span>) : <a href=\"../DBX/QueryBuilder.html\">QueryBuilder</a>","location":{"filename":"src/query_builder/builder_criteria.cr","line_number":213,"url":null},"def":{"name":"full_join","args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":"FieldType"},{"name":"field1","doc":null,"default_value":"","external_name":"field1","restriction":"FieldType"},{"name":"field2","doc":null,"default_value":"nil","external_name":"field2","restriction":"FieldType | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"QueryBuilder","visibility":"Public","body":"join(table, field1, field2, \"FULL\")"}},{"id":"full_outer_join(table:FieldType,field1:FieldType,field2:FieldType?=nil):QueryBuilder-instance-method","html_id":"full_outer_join(table:FieldType,field1:FieldType,field2:FieldType?=nil):QueryBuilder-instance-method","name":"full_outer_join","doc":"Adds `FULL OUTER JOIN` to the current query.","summary":"<p>Adds <code>FULL OUTER JOIN</code> to the current query.</p>","abstract":false,"args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":"FieldType"},{"name":"field1","doc":null,"default_value":"","external_name":"field1","restriction":"FieldType"},{"name":"field2","doc":null,"default_value":"nil","external_name":"field2","restriction":"FieldType | ::Nil"}],"args_string":"(table : FieldType, field1 : FieldType, field2 : FieldType? = <span class=\"n\">nil</span>) : QueryBuilder","args_html":"(table : <a href=\"../DBX/QueryBuilder/FieldType.html\">FieldType</a>, field1 : <a href=\"../DBX/QueryBuilder/FieldType.html\">FieldType</a>, field2 : <a href=\"../DBX/QueryBuilder/FieldType.html\">FieldType</a>? = <span class=\"n\">nil</span>) : <a href=\"../DBX/QueryBuilder.html\">QueryBuilder</a>","location":{"filename":"src/query_builder/builder_criteria.cr","line_number":213,"url":null},"def":{"name":"full_outer_join","args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":"FieldType"},{"name":"field1","doc":null,"default_value":"","external_name":"field1","restriction":"FieldType"},{"name":"field2","doc":null,"default_value":"nil","external_name":"field2","restriction":"FieldType | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"QueryBuilder","visibility":"Public","body":"join(table, field1, field2, \"FULL OUTER\")"}},{"id":"group_by(field:OneOrMoreFieldsType):QueryBuilder-instance-method","html_id":"group_by(field:OneOrMoreFieldsType):QueryBuilder-instance-method","name":"group_by","doc":null,"summary":null,"abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"OneOrMoreFieldsType"}],"args_string":"(field : OneOrMoreFieldsType) : QueryBuilder","args_html":"(field : <a href=\"../DBX/QueryBuilder/OneOrMoreFieldsType.html\">OneOrMoreFieldsType</a>) : <a href=\"../DBX/QueryBuilder.html\">QueryBuilder</a>","location":{"filename":"src/query_builder/builder_criteria.cr","line_number":411,"url":null},"def":{"name":"group_by","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"OneOrMoreFieldsType"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"QueryBuilder","visibility":"Public","body":"@group_by = if field.is_a?(FieldsType)\n  field.map do |name|\n    quote(name)\n  end.join(\", \")\nelse\n  quote(field)\nend\nself\n"}},{"id":"having(&):QueryBuilder-instance-method","html_id":"having(&):QueryBuilder-instance-method","name":"having","doc":"Defines in raw form the SQL statement of `HAVING`.\n> Be careful, you have to manage arguments (`arg`) and quotes (`q`).\n\nExample:\n\n```\nbuilder.find(:tests).group_by(:payment).having { \"SUM(price) > 40\" }\n```\n\nGenerates:\n\n```\nSELECT * FROM \"tests\" GROUP_BY \"payment\" HAVING SUM(person) > 40\n```","summary":"<p>Defines in raw form the SQL statement of <code>HAVING</code>.</p>","abstract":false,"args":[],"args_string":"(&) : QueryBuilder","args_html":"(&) : <a href=\"../DBX/QueryBuilder.html\">QueryBuilder</a>","location":{"filename":"src/query_builder/builder_criteria.cr","line_number":443,"url":null},"def":{"name":"having","args":[],"double_splat":null,"splat_index":null,"yields":0,"block_arg":null,"return_type":"QueryBuilder","visibility":"Public","body":"@having = with QueryBuilderScope.new(self) yield\nself\n"}},{"id":"having(field:FieldType,op_or_val,value=nil):QueryBuilder-instance-method","html_id":"having(field:FieldType,op_or_val,value=nil):QueryBuilder-instance-method","name":"having","doc":null,"summary":null,"abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"FieldType"},{"name":"op_or_val","doc":null,"default_value":"","external_name":"op_or_val","restriction":""},{"name":"value","doc":null,"default_value":"nil","external_name":"value","restriction":""}],"args_string":"(field : FieldType, op_or_val, value = <span class=\"n\">nil</span>) : QueryBuilder","args_html":"(field : <a href=\"../DBX/QueryBuilder/FieldType.html\">FieldType</a>, op_or_val, value = <span class=\"n\">nil</span>) : <a href=\"../DBX/QueryBuilder.html\">QueryBuilder</a>","location":{"filename":"src/query_builder/builder_criteria.cr","line_number":420,"url":null},"def":{"name":"having","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"FieldType"},{"name":"op_or_val","doc":null,"default_value":"","external_name":"op_or_val","restriction":""},{"name":"value","doc":null,"default_value":"nil","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"QueryBuilder","visibility":"Public","body":"@having = if @operators.includes?(op_or_val.to_s)\n  \"#{field} #{op_or_val} #{add_arg(value)}\"\nelse\n  \"#{field} > #{add_arg(op_or_val)}\"\nend\nself\n"}},{"id":"in(field:FieldType,values:Array|Tuple,type=&quot;&quot;,and_or=&quot;AND&quot;):QueryBuilder-instance-method","html_id":"in(field:FieldType,values:Array|Tuple,type=&quot;&quot;,and_or=&quot;AND&quot;):QueryBuilder-instance-method","name":"in","doc":null,"summary":null,"abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"FieldType"},{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":"Array | Tuple"},{"name":"type","doc":null,"default_value":"\"\"","external_name":"type","restriction":""},{"name":"and_or","doc":null,"default_value":"\"AND\"","external_name":"and_or","restriction":""}],"args_string":"(field : FieldType, values : Array | Tuple, type = <span class=\"s\">&quot;&quot;</span>, and_or = <span class=\"s\">&quot;AND&quot;</span>) : QueryBuilder","args_html":"(field : <a href=\"../DBX/QueryBuilder/FieldType.html\">FieldType</a>, values : Array | Tuple, type = <span class=\"s\">&quot;&quot;</span>, and_or = <span class=\"s\">&quot;AND&quot;</span>) : <a href=\"../DBX/QueryBuilder.html\">QueryBuilder</a>","location":{"filename":"src/query_builder/builder_criteria.cr","line_number":290,"url":null},"def":{"name":"in","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"FieldType"},{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":"Array | Tuple"},{"name":"type","doc":null,"default_value":"\"\"","external_name":"type","restriction":""},{"name":"and_or","doc":null,"default_value":"\"AND\"","external_name":"and_or","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"QueryBuilder","visibility":"Public","body":"keys = [] of String\nvalues.each do |val|\n  keys << (add_arg(val))\nend\n@where = @where + (if @where.empty?\n  \"#{quote(field)} #{type}IN (#{keys.join(\", \")})\"\nelse\n  \" #{and_or} #{quote(field)} #{type}IN (#{keys.join(\", \")})\"\nend)\nself\n"}},{"id":"inner_join(table:FieldType,field1:FieldType,field2:FieldType?=nil):QueryBuilder-instance-method","html_id":"inner_join(table:FieldType,field1:FieldType,field2:FieldType?=nil):QueryBuilder-instance-method","name":"inner_join","doc":"Adds `INNER JOIN` to the current query.","summary":"<p>Adds <code>INNER JOIN</code> to the current query.</p>","abstract":false,"args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":"FieldType"},{"name":"field1","doc":null,"default_value":"","external_name":"field1","restriction":"FieldType"},{"name":"field2","doc":null,"default_value":"nil","external_name":"field2","restriction":"FieldType | ::Nil"}],"args_string":"(table : FieldType, field1 : FieldType, field2 : FieldType? = <span class=\"n\">nil</span>) : QueryBuilder","args_html":"(table : <a href=\"../DBX/QueryBuilder/FieldType.html\">FieldType</a>, field1 : <a href=\"../DBX/QueryBuilder/FieldType.html\">FieldType</a>, field2 : <a href=\"../DBX/QueryBuilder/FieldType.html\">FieldType</a>? = <span class=\"n\">nil</span>) : <a href=\"../DBX/QueryBuilder.html\">QueryBuilder</a>","location":{"filename":"src/query_builder/builder_criteria.cr","line_number":213,"url":null},"def":{"name":"inner_join","args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":"FieldType"},{"name":"field1","doc":null,"default_value":"","external_name":"field1","restriction":"FieldType"},{"name":"field2","doc":null,"default_value":"nil","external_name":"field2","restriction":"FieldType | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"QueryBuilder","visibility":"Public","body":"join(table, field1, field2, \"INNER\")"}},{"id":"insert(data:Hash|NamedTuple):QueryBuilder-instance-method","html_id":"insert(data:Hash|NamedTuple):QueryBuilder-instance-method","name":"insert","doc":null,"summary":null,"abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Hash | NamedTuple"}],"args_string":"(data : Hash | NamedTuple) : QueryBuilder","args_html":"(data : Hash | NamedTuple) : <a href=\"../DBX/QueryBuilder.html\">QueryBuilder</a>","location":{"filename":"src/query_builder/builder.cr","line_number":119,"url":null},"def":{"name":"insert","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Hash | NamedTuple"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"QueryBuilder","visibility":"Public","body":"@query_method = :insert\n@data = to_data_h(data)\nself\n"}},{"id":"insert(table:OneOrMoreFieldsType,data:Hash|NamedTuple):QueryBuilder-instance-method","html_id":"insert(table:OneOrMoreFieldsType,data:Hash|NamedTuple):QueryBuilder-instance-method","name":"insert","doc":null,"summary":null,"abstract":false,"args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":"OneOrMoreFieldsType"},{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Hash | NamedTuple"}],"args_string":"(table : OneOrMoreFieldsType, data : Hash | NamedTuple) : QueryBuilder","args_html":"(table : <a href=\"../DBX/QueryBuilder/OneOrMoreFieldsType.html\">OneOrMoreFieldsType</a>, data : Hash | NamedTuple) : <a href=\"../DBX/QueryBuilder.html\">QueryBuilder</a>","location":{"filename":"src/query_builder/builder.cr","line_number":125,"url":null},"def":{"name":"insert","args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":"OneOrMoreFieldsType"},{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Hash | NamedTuple"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"QueryBuilder","visibility":"Public","body":"insert(data)\ntable(table)\n"}},{"id":"join(table:FieldType,field1:FieldType,field2:FieldType?=nil,type=&quot;&quot;):QueryBuilder-instance-method","html_id":"join(table:FieldType,field1:FieldType,field2:FieldType?=nil,type=&quot;&quot;):QueryBuilder-instance-method","name":"join","doc":null,"summary":null,"abstract":false,"args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":"FieldType"},{"name":"field1","doc":null,"default_value":"","external_name":"field1","restriction":"FieldType"},{"name":"field2","doc":null,"default_value":"nil","external_name":"field2","restriction":"FieldType | ::Nil"},{"name":"type","doc":null,"default_value":"\"\"","external_name":"type","restriction":""}],"args_string":"(table : FieldType, field1 : FieldType, field2 : FieldType? = <span class=\"n\">nil</span>, type = <span class=\"s\">&quot;&quot;</span>) : QueryBuilder","args_html":"(table : <a href=\"../DBX/QueryBuilder/FieldType.html\">FieldType</a>, field1 : <a href=\"../DBX/QueryBuilder/FieldType.html\">FieldType</a>, field2 : <a href=\"../DBX/QueryBuilder/FieldType.html\">FieldType</a>? = <span class=\"n\">nil</span>, type = <span class=\"s\">&quot;&quot;</span>) : <a href=\"../DBX/QueryBuilder.html\">QueryBuilder</a>","location":{"filename":"src/query_builder/builder_criteria.cr","line_number":181,"url":null},"def":{"name":"join","args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":"FieldType"},{"name":"field1","doc":null,"default_value":"","external_name":"field1","restriction":"FieldType"},{"name":"field2","doc":null,"default_value":"nil","external_name":"field2","restriction":"FieldType | ::Nil"},{"name":"type","doc":null,"default_value":"\"\"","external_name":"type","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"QueryBuilder","visibility":"Public","body":"@join = @join + (if field2.nil?\n  \" #{type} JOIN #{quote(table)} ON #{quote(field1)}\"\nelse\n  \" #{type} JOIN #{quote(table)} ON #{quote(field1)} = #{quote(field2)}\"\nend)\nself\n"}},{"id":"join(&):QueryBuilder-instance-method","html_id":"join(&):QueryBuilder-instance-method","name":"join","doc":"Adds a raw `join` to current query.\n> Be careful, you have to manage arguments (`arg`) and quotes (`q`).\n\nExample:\n\n```\nbuilder.find(\"tests\").join { \"\n  INNER JOIN T2 ON T1.a = T2.a\n  AND T1.b = T2.b\n  OR T1.b = #{q(some_value_to_quote)}\n\" }\n  .join { \"LEFT JOIN payments p USING (product_id)\" }\n```","summary":"<p>Adds a raw <code><a href=\"../DBX/QueryBuilder.html#join(&):QueryBuilder-instance-method\">#join</a></code> to current query.</p>","abstract":false,"args":[],"args_string":"(&) : QueryBuilder","args_html":"(&) : <a href=\"../DBX/QueryBuilder.html\">QueryBuilder</a>","location":{"filename":"src/query_builder/builder_criteria.cr","line_number":208,"url":null},"def":{"name":"join","args":[],"double_splat":null,"splat_index":null,"yields":0,"block_arg":null,"return_type":"QueryBuilder","visibility":"Public","body":"@join = @join + \" #{with QueryBuilderScope.new(self) yield}\"\nself\n"}},{"id":"join:String-instance-method","html_id":"join:String-instance-method","name":"join","doc":"Returns jointure. Returns empty string if no jointure has been defined.\n\n```\nputs builder.join unless builder.join.blank? # or .empty?\n```","summary":"<p>Returns jointure.</p>","abstract":false,"args":[],"args_string":" : String","args_html":" : String","location":{"filename":"src/query_builder/builder_criteria.cr","line_number":230,"url":null},"def":{"name":"join","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@join"}},{"id":"last_query:String-instance-method","html_id":"last_query:String-instance-method","name":"last_query","doc":"Returns the last query.","summary":"<p>Returns the last query.</p>","abstract":false,"args":[],"args_string":" : String","args_html":" : String","location":{"filename":"src/query_builder/builder.cr","line_number":295,"url":null},"def":{"name":"last_query","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@last_query"}},{"id":"last_query_method:Symbol?-instance-method","html_id":"last_query_method:Symbol?-instance-method","name":"last_query_method","doc":"Returns the last query method.","summary":"<p>Returns the last query method.</p>","abstract":false,"args":[],"args_string":" : Symbol?","args_html":" : Symbol?","location":{"filename":"src/query_builder/builder.cr","line_number":300,"url":null},"def":{"name":"last_query_method","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Symbol | ::Nil","visibility":"Public","body":"@last_query_method"}},{"id":"left_join(table:FieldType,field1:FieldType,field2:FieldType?=nil):QueryBuilder-instance-method","html_id":"left_join(table:FieldType,field1:FieldType,field2:FieldType?=nil):QueryBuilder-instance-method","name":"left_join","doc":"Adds `LEFT JOIN` to the current query.","summary":"<p>Adds <code>LEFT JOIN</code> to the current query.</p>","abstract":false,"args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":"FieldType"},{"name":"field1","doc":null,"default_value":"","external_name":"field1","restriction":"FieldType"},{"name":"field2","doc":null,"default_value":"nil","external_name":"field2","restriction":"FieldType | ::Nil"}],"args_string":"(table : FieldType, field1 : FieldType, field2 : FieldType? = <span class=\"n\">nil</span>) : QueryBuilder","args_html":"(table : <a href=\"../DBX/QueryBuilder/FieldType.html\">FieldType</a>, field1 : <a href=\"../DBX/QueryBuilder/FieldType.html\">FieldType</a>, field2 : <a href=\"../DBX/QueryBuilder/FieldType.html\">FieldType</a>? = <span class=\"n\">nil</span>) : <a href=\"../DBX/QueryBuilder.html\">QueryBuilder</a>","location":{"filename":"src/query_builder/builder_criteria.cr","line_number":213,"url":null},"def":{"name":"left_join","args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":"FieldType"},{"name":"field1","doc":null,"default_value":"","external_name":"field1","restriction":"FieldType"},{"name":"field2","doc":null,"default_value":"nil","external_name":"field2","restriction":"FieldType | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"QueryBuilder","visibility":"Public","body":"join(table, field1, field2, \"LEFT\")"}},{"id":"left_outer_join(table:FieldType,field1:FieldType,field2:FieldType?=nil):QueryBuilder-instance-method","html_id":"left_outer_join(table:FieldType,field1:FieldType,field2:FieldType?=nil):QueryBuilder-instance-method","name":"left_outer_join","doc":"Adds `LEFT OUTER JOIN` to the current query.","summary":"<p>Adds <code>LEFT OUTER JOIN</code> to the current query.</p>","abstract":false,"args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":"FieldType"},{"name":"field1","doc":null,"default_value":"","external_name":"field1","restriction":"FieldType"},{"name":"field2","doc":null,"default_value":"nil","external_name":"field2","restriction":"FieldType | ::Nil"}],"args_string":"(table : FieldType, field1 : FieldType, field2 : FieldType? = <span class=\"n\">nil</span>) : QueryBuilder","args_html":"(table : <a href=\"../DBX/QueryBuilder/FieldType.html\">FieldType</a>, field1 : <a href=\"../DBX/QueryBuilder/FieldType.html\">FieldType</a>, field2 : <a href=\"../DBX/QueryBuilder/FieldType.html\">FieldType</a>? = <span class=\"n\">nil</span>) : <a href=\"../DBX/QueryBuilder.html\">QueryBuilder</a>","location":{"filename":"src/query_builder/builder_criteria.cr","line_number":213,"url":null},"def":{"name":"left_outer_join","args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":"FieldType"},{"name":"field1","doc":null,"default_value":"","external_name":"field1","restriction":"FieldType"},{"name":"field2","doc":null,"default_value":"nil","external_name":"field2","restriction":"FieldType | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"QueryBuilder","visibility":"Public","body":"join(table, field1, field2, \"LEFT OUTER\")"}},{"id":"like(field:FieldType,value,type=&quot;&quot;,and_or=&quot;AND&quot;):QueryBuilder-instance-method","html_id":"like(field:FieldType,value,type=&quot;&quot;,and_or=&quot;AND&quot;):QueryBuilder-instance-method","name":"like","doc":null,"summary":null,"abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"FieldType"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""},{"name":"type","doc":null,"default_value":"\"\"","external_name":"type","restriction":""},{"name":"and_or","doc":null,"default_value":"\"AND\"","external_name":"and_or","restriction":""}],"args_string":"(field : FieldType, value, type = <span class=\"s\">&quot;&quot;</span>, and_or = <span class=\"s\">&quot;AND&quot;</span>) : QueryBuilder","args_html":"(field : <a href=\"../DBX/QueryBuilder/FieldType.html\">FieldType</a>, value, type = <span class=\"s\">&quot;&quot;</span>, and_or = <span class=\"s\">&quot;AND&quot;</span>) : <a href=\"../DBX/QueryBuilder.html\">QueryBuilder</a>","location":{"filename":"src/query_builder/builder_criteria.cr","line_number":337,"url":null},"def":{"name":"like","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"FieldType"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""},{"name":"type","doc":null,"default_value":"\"\"","external_name":"type","restriction":""},{"name":"and_or","doc":null,"default_value":"\"AND\"","external_name":"and_or","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"QueryBuilder","visibility":"Public","body":"@where = @where + (if @where.empty?\n  \"#{quote(field)} #{type}LIKE #{add_arg(value)}\"\nelse\n  \" #{and_or} #{quote(field)} #{type}LIKE #{add_arg(value)}\"\nend)\nself\n"}},{"id":"limit:String-instance-method","html_id":"limit:String-instance-method","name":"limit","doc":"Returns `limit` value. Returns empty string if no limit has been defined.\n\n```\nputs builder.limit unless builder.limit.blank? # or .empty?\n```","summary":"<p>Returns <code><a href=\"../DBX/QueryBuilder.html#limit:String-instance-method\">#limit</a></code> value.</p>","abstract":false,"args":[],"args_string":" : String","args_html":" : String","location":{"filename":"src/query_builder/builder_criteria.cr","line_number":374,"url":null},"def":{"name":"limit","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@limit"}},{"id":"limit(limit,limit_end=nil):QueryBuilder-instance-method","html_id":"limit(limit,limit_end=nil):QueryBuilder-instance-method","name":"limit","doc":null,"summary":null,"abstract":false,"args":[{"name":"limit","doc":null,"default_value":"","external_name":"limit","restriction":""},{"name":"limit_end","doc":null,"default_value":"nil","external_name":"limit_end","restriction":""}],"args_string":"(limit, limit_end = <span class=\"n\">nil</span>) : QueryBuilder","args_html":"(limit, limit_end = <span class=\"n\">nil</span>) : <a href=\"../DBX/QueryBuilder.html\">QueryBuilder</a>","location":{"filename":"src/query_builder/builder_criteria.cr","line_number":358,"url":null},"def":{"name":"limit","args":[{"name":"limit","doc":null,"default_value":"","external_name":"limit","restriction":""},{"name":"limit_end","doc":null,"default_value":"nil","external_name":"limit_end","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"QueryBuilder","visibility":"Public","body":"if limit_end.nil?\n  @limit = add_arg(limit)\nelse\n  @limit = add_arg(limit_end)\n  offset(limit)\nend\nself\n"}},{"id":"max(field:FieldType,name=nil):QueryBuilder-instance-method","html_id":"max(field:FieldType,name=nil):QueryBuilder-instance-method","name":"max","doc":"Adds `MAX` to the current query.","summary":"<p>Adds <code>MAX</code> to the current query.</p>","abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"FieldType"},{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(field : FieldType, name = <span class=\"n\">nil</span>) : QueryBuilder","args_html":"(field : <a href=\"../DBX/QueryBuilder/FieldType.html\">FieldType</a>, name = <span class=\"n\">nil</span>) : <a href=\"../DBX/QueryBuilder.html\">QueryBuilder</a>","location":{"filename":"src/query_builder/builder_criteria.cr","line_number":171,"url":null},"def":{"name":"max","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"FieldType"},{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"QueryBuilder","visibility":"Public","body":"max = \"MAX(#{field})\"\nif !name.nil?\n  max = max + \" AS #{quote(name)}\"\nend\n@select = (@select.compare(\"*\")) == 0 ? max : \"#{@select}, #{max}\"\nself\n"}},{"id":"min(field:FieldType,name=nil):QueryBuilder-instance-method","html_id":"min(field:FieldType,name=nil):QueryBuilder-instance-method","name":"min","doc":"Adds `MIN` to the current query.","summary":"<p>Adds <code>MIN</code> to the current query.</p>","abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"FieldType"},{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(field : FieldType, name = <span class=\"n\">nil</span>) : QueryBuilder","args_html":"(field : <a href=\"../DBX/QueryBuilder/FieldType.html\">FieldType</a>, name = <span class=\"n\">nil</span>) : <a href=\"../DBX/QueryBuilder.html\">QueryBuilder</a>","location":{"filename":"src/query_builder/builder_criteria.cr","line_number":171,"url":null},"def":{"name":"min","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"FieldType"},{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"QueryBuilder","visibility":"Public","body":"min = \"MIN(#{field})\"\nif !name.nil?\n  min = min + \" AS #{quote(name)}\"\nend\n@select = (@select.compare(\"*\")) == 0 ? min : \"#{@select}, #{min}\"\nself\n"}},{"id":"not_between(field:FieldType,value1,value2):QueryBuilder-instance-method","html_id":"not_between(field:FieldType,value1,value2):QueryBuilder-instance-method","name":"not_between","doc":null,"summary":null,"abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"FieldType"},{"name":"value1","doc":null,"default_value":"","external_name":"value1","restriction":""},{"name":"value2","doc":null,"default_value":"","external_name":"value2","restriction":""}],"args_string":"(field : FieldType, value1, value2) : QueryBuilder","args_html":"(field : <a href=\"../DBX/QueryBuilder/FieldType.html\">FieldType</a>, value1, value2) : <a href=\"../DBX/QueryBuilder.html\">QueryBuilder</a>","location":{"filename":"src/query_builder/builder_criteria.cr","line_number":329,"url":null},"def":{"name":"not_between","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"FieldType"},{"name":"value1","doc":null,"default_value":"","external_name":"value1","restriction":""},{"name":"value2","doc":null,"default_value":"","external_name":"value2","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"QueryBuilder","visibility":"Public","body":"between(field, value1, value2, \"NOT \", \"AND\")"}},{"id":"not_in(field:FieldType,values:Array|Tuple):QueryBuilder-instance-method","html_id":"not_in(field:FieldType,values:Array|Tuple):QueryBuilder-instance-method","name":"not_in","doc":null,"summary":null,"abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"FieldType"},{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":"Array | Tuple"}],"args_string":"(field : FieldType, values : Array | Tuple) : QueryBuilder","args_html":"(field : <a href=\"../DBX/QueryBuilder/FieldType.html\">FieldType</a>, values : Array | Tuple) : <a href=\"../DBX/QueryBuilder.html\">QueryBuilder</a>","location":{"filename":"src/query_builder/builder_criteria.cr","line_number":306,"url":null},"def":{"name":"not_in","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"FieldType"},{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":"Array | Tuple"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"QueryBuilder","visibility":"Public","body":"self.in(field, values, \"NOT \", \"AND\")\nself\n"}},{"id":"not_like(field:FieldType,value):QueryBuilder-instance-method","html_id":"not_like(field:FieldType,value):QueryBuilder-instance-method","name":"not_like","doc":null,"summary":null,"abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"FieldType"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(field : FieldType, value) : QueryBuilder","args_html":"(field : <a href=\"../DBX/QueryBuilder/FieldType.html\">FieldType</a>, value) : <a href=\"../DBX/QueryBuilder.html\">QueryBuilder</a>","location":{"filename":"src/query_builder/builder_criteria.cr","line_number":350,"url":null},"def":{"name":"not_like","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"FieldType"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"QueryBuilder","visibility":"Public","body":"like(field, value, \"NOT \", \"AND\")"}},{"id":"not_where(field:FieldType,op_or_val,value=nil):QueryBuilder-instance-method","html_id":"not_where(field:FieldType,op_or_val,value=nil):QueryBuilder-instance-method","name":"not_where","doc":null,"summary":null,"abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"FieldType"},{"name":"op_or_val","doc":null,"default_value":"","external_name":"op_or_val","restriction":""},{"name":"value","doc":null,"default_value":"nil","external_name":"value","restriction":""}],"args_string":"(field : FieldType, op_or_val, value = <span class=\"n\">nil</span>) : QueryBuilder","args_html":"(field : <a href=\"../DBX/QueryBuilder/FieldType.html\">FieldType</a>, op_or_val, value = <span class=\"n\">nil</span>) : <a href=\"../DBX/QueryBuilder.html\">QueryBuilder</a>","location":{"filename":"src/query_builder/builder_criteria.cr","line_number":282,"url":null},"def":{"name":"not_where","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"FieldType"},{"name":"op_or_val","doc":null,"default_value":"","external_name":"op_or_val","restriction":""},{"name":"value","doc":null,"default_value":"nil","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"QueryBuilder","visibility":"Public","body":"where(field, op_or_val, value, \"NOT \", \"AND\")"}},{"id":"offset(offset):QueryBuilder-instance-method","html_id":"offset(offset):QueryBuilder-instance-method","name":"offset","doc":null,"summary":null,"abstract":false,"args":[{"name":"offset","doc":null,"default_value":"","external_name":"offset","restriction":""}],"args_string":"(offset) : QueryBuilder","args_html":"(offset) : <a href=\"../DBX/QueryBuilder.html\">QueryBuilder</a>","location":{"filename":"src/query_builder/builder_criteria.cr","line_number":378,"url":null},"def":{"name":"offset","args":[{"name":"offset","doc":null,"default_value":"","external_name":"offset","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"QueryBuilder","visibility":"Public","body":"@offset = add_arg(offset)\nself\n"}},{"id":"offset:String-instance-method","html_id":"offset:String-instance-method","name":"offset","doc":"Returns `offset` value. Returns empty string if no offset has been defined.\n\n```\nputs builder.offset unless builder.offset.blank? # or .empty?\n```","summary":"<p>Returns <code><a href=\"../DBX/QueryBuilder.html#offset:String-instance-method\">#offset</a></code> value.</p>","abstract":false,"args":[],"args_string":" : String","args_html":" : String","location":{"filename":"src/query_builder/builder_criteria.cr","line_number":388,"url":null},"def":{"name":"offset","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@offset"}},{"id":"optimize(table:OneOrMoreFieldsType):QueryBuilder-instance-method","html_id":"optimize(table:OneOrMoreFieldsType):QueryBuilder-instance-method","name":"optimize","doc":"Builds the `OPTIMIZE` query","summary":"<p>Builds the <code>OPTIMIZE</code> query</p>","abstract":false,"args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":"OneOrMoreFieldsType"}],"args_string":"(table : OneOrMoreFieldsType) : QueryBuilder","args_html":"(table : <a href=\"../DBX/QueryBuilder/OneOrMoreFieldsType.html\">OneOrMoreFieldsType</a>) : <a href=\"../DBX/QueryBuilder.html\">QueryBuilder</a>","location":{"filename":"src/query_builder/builder.cr","line_number":240,"url":null},"def":{"name":"optimize","args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":"OneOrMoreFieldsType"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"QueryBuilder","visibility":"Public","body":"optimize\ntable(table)\n"}},{"id":"optimize:QueryBuilder-instance-method","html_id":"optimize:QueryBuilder-instance-method","name":"optimize","doc":"Builds the `OPTIMIZE` query","summary":"<p>Builds the <code>OPTIMIZE</code> query</p>","abstract":false,"args":[],"args_string":" : QueryBuilder","args_html":" : <a href=\"../DBX/QueryBuilder.html\">QueryBuilder</a>","location":{"filename":"src/query_builder/builder.cr","line_number":240,"url":null},"def":{"name":"optimize","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"QueryBuilder","visibility":"Public","body":"@query_method = :optimize\nself\n"}},{"id":"or_between(field:FieldType,value1,value2):QueryBuilder-instance-method","html_id":"or_between(field:FieldType,value1,value2):QueryBuilder-instance-method","name":"or_between","doc":null,"summary":null,"abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"FieldType"},{"name":"value1","doc":null,"default_value":"","external_name":"value1","restriction":""},{"name":"value2","doc":null,"default_value":"","external_name":"value2","restriction":""}],"args_string":"(field : FieldType, value1, value2) : QueryBuilder","args_html":"(field : <a href=\"../DBX/QueryBuilder/FieldType.html\">FieldType</a>, value1, value2) : <a href=\"../DBX/QueryBuilder.html\">QueryBuilder</a>","location":{"filename":"src/query_builder/builder_criteria.cr","line_number":325,"url":null},"def":{"name":"or_between","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"FieldType"},{"name":"value1","doc":null,"default_value":"","external_name":"value1","restriction":""},{"name":"value2","doc":null,"default_value":"","external_name":"value2","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"QueryBuilder","visibility":"Public","body":"between(field, value1, value2, \"\", \"OR\")"}},{"id":"or_in(field:FieldType,values:Array|Tuple):QueryBuilder-instance-method","html_id":"or_in(field:FieldType,values:Array|Tuple):QueryBuilder-instance-method","name":"or_in","doc":null,"summary":null,"abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"FieldType"},{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":"Array | Tuple"}],"args_string":"(field : FieldType, values : Array | Tuple) : QueryBuilder","args_html":"(field : <a href=\"../DBX/QueryBuilder/FieldType.html\">FieldType</a>, values : Array | Tuple) : <a href=\"../DBX/QueryBuilder.html\">QueryBuilder</a>","location":{"filename":"src/query_builder/builder_criteria.cr","line_number":301,"url":null},"def":{"name":"or_in","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"FieldType"},{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":"Array | Tuple"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"QueryBuilder","visibility":"Public","body":"self.in(field, values, \"\", \"OR\")\nself\n"}},{"id":"or_like(field:FieldType,value):QueryBuilder-instance-method","html_id":"or_like(field:FieldType,value):QueryBuilder-instance-method","name":"or_like","doc":null,"summary":null,"abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"FieldType"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(field : FieldType, value) : QueryBuilder","args_html":"(field : <a href=\"../DBX/QueryBuilder/FieldType.html\">FieldType</a>, value) : <a href=\"../DBX/QueryBuilder.html\">QueryBuilder</a>","location":{"filename":"src/query_builder/builder_criteria.cr","line_number":346,"url":null},"def":{"name":"or_like","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"FieldType"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"QueryBuilder","visibility":"Public","body":"like(field, value, \"\", \"OR\")"}},{"id":"or_not_between(field:FieldType,value1,value2):QueryBuilder-instance-method","html_id":"or_not_between(field:FieldType,value1,value2):QueryBuilder-instance-method","name":"or_not_between","doc":null,"summary":null,"abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"FieldType"},{"name":"value1","doc":null,"default_value":"","external_name":"value1","restriction":""},{"name":"value2","doc":null,"default_value":"","external_name":"value2","restriction":""}],"args_string":"(field : FieldType, value1, value2) : QueryBuilder","args_html":"(field : <a href=\"../DBX/QueryBuilder/FieldType.html\">FieldType</a>, value1, value2) : <a href=\"../DBX/QueryBuilder.html\">QueryBuilder</a>","location":{"filename":"src/query_builder/builder_criteria.cr","line_number":333,"url":null},"def":{"name":"or_not_between","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"FieldType"},{"name":"value1","doc":null,"default_value":"","external_name":"value1","restriction":""},{"name":"value2","doc":null,"default_value":"","external_name":"value2","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"QueryBuilder","visibility":"Public","body":"between(field, value1, value2, \"NOT \", \"OR\")"}},{"id":"or_not_in(field:FieldType,values:Array|Tuple):QueryBuilder-instance-method","html_id":"or_not_in(field:FieldType,values:Array|Tuple):QueryBuilder-instance-method","name":"or_not_in","doc":null,"summary":null,"abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"FieldType"},{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":"Array | Tuple"}],"args_string":"(field : FieldType, values : Array | Tuple) : QueryBuilder","args_html":"(field : <a href=\"../DBX/QueryBuilder/FieldType.html\">FieldType</a>, values : Array | Tuple) : <a href=\"../DBX/QueryBuilder.html\">QueryBuilder</a>","location":{"filename":"src/query_builder/builder_criteria.cr","line_number":311,"url":null},"def":{"name":"or_not_in","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"FieldType"},{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":"Array | Tuple"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"QueryBuilder","visibility":"Public","body":"self.in(field, values, \"NOT \", \"OR\")\nself\n"}},{"id":"or_not_like(field:FieldType,value):QueryBuilder-instance-method","html_id":"or_not_like(field:FieldType,value):QueryBuilder-instance-method","name":"or_not_like","doc":null,"summary":null,"abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"FieldType"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(field : FieldType, value) : QueryBuilder","args_html":"(field : <a href=\"../DBX/QueryBuilder/FieldType.html\">FieldType</a>, value) : <a href=\"../DBX/QueryBuilder.html\">QueryBuilder</a>","location":{"filename":"src/query_builder/builder_criteria.cr","line_number":354,"url":null},"def":{"name":"or_not_like","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"FieldType"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"QueryBuilder","visibility":"Public","body":"like(field, value, \"NOT \", \"OR\")"}},{"id":"or_not_where(field:FieldType,op_or_val,value=nil):QueryBuilder-instance-method","html_id":"or_not_where(field:FieldType,op_or_val,value=nil):QueryBuilder-instance-method","name":"or_not_where","doc":null,"summary":null,"abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"FieldType"},{"name":"op_or_val","doc":null,"default_value":"","external_name":"op_or_val","restriction":""},{"name":"value","doc":null,"default_value":"nil","external_name":"value","restriction":""}],"args_string":"(field : FieldType, op_or_val, value = <span class=\"n\">nil</span>) : QueryBuilder","args_html":"(field : <a href=\"../DBX/QueryBuilder/FieldType.html\">FieldType</a>, op_or_val, value = <span class=\"n\">nil</span>) : <a href=\"../DBX/QueryBuilder.html\">QueryBuilder</a>","location":{"filename":"src/query_builder/builder_criteria.cr","line_number":286,"url":null},"def":{"name":"or_not_where","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"FieldType"},{"name":"op_or_val","doc":null,"default_value":"","external_name":"op_or_val","restriction":""},{"name":"value","doc":null,"default_value":"nil","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"QueryBuilder","visibility":"Public","body":"where(field, op_or_val, value, \"NOT \", \"OR\")"}},{"id":"or_where(field:FieldType,op_or_val,value=nil):QueryBuilder-instance-method","html_id":"or_where(field:FieldType,op_or_val,value=nil):QueryBuilder-instance-method","name":"or_where","doc":null,"summary":null,"abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"FieldType"},{"name":"op_or_val","doc":null,"default_value":"","external_name":"op_or_val","restriction":""},{"name":"value","doc":null,"default_value":"nil","external_name":"value","restriction":""}],"args_string":"(field : FieldType, op_or_val, value = <span class=\"n\">nil</span>) : QueryBuilder","args_html":"(field : <a href=\"../DBX/QueryBuilder/FieldType.html\">FieldType</a>, op_or_val, value = <span class=\"n\">nil</span>) : <a href=\"../DBX/QueryBuilder.html\">QueryBuilder</a>","location":{"filename":"src/query_builder/builder_criteria.cr","line_number":278,"url":null},"def":{"name":"or_where","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"FieldType"},{"name":"op_or_val","doc":null,"default_value":"","external_name":"op_or_val","restriction":""},{"name":"value","doc":null,"default_value":"nil","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"QueryBuilder","visibility":"Public","body":"where(field, op_or_val, value, \"\", \"OR\")"}},{"id":"order_by(field:FieldType,dir=nil):QueryBuilder-instance-method","html_id":"order_by(field:FieldType,dir=nil):QueryBuilder-instance-method","name":"order_by","doc":null,"summary":null,"abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"FieldType"},{"name":"dir","doc":null,"default_value":"nil","external_name":"dir","restriction":""}],"args_string":"(field : FieldType, dir = <span class=\"n\">nil</span>) : QueryBuilder","args_html":"(field : <a href=\"../DBX/QueryBuilder/FieldType.html\">FieldType</a>, dir = <span class=\"n\">nil</span>) : <a href=\"../DBX/QueryBuilder.html\">QueryBuilder</a>","location":{"filename":"src/query_builder/builder_criteria.cr","line_number":399,"url":null},"def":{"name":"order_by","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"FieldType"},{"name":"dir","doc":null,"default_value":"nil","external_name":"dir","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"QueryBuilder","visibility":"Public","body":"field = field.to_s\norder_by = if dir.nil?\n  (  (field.includes?(\" \")) || (field == \"rand()\")) ? field : \"#{quote(field)} ASC\"\nelse\n  \"#{quote(field)} #{dir.to_s.upcase}\"\nend\n@order_by = @order_by + (@order_by.empty? ? order_by : \", #{order_by}\")\nself\n"}},{"id":"paginate(per_page,page):QueryBuilder-instance-method","html_id":"paginate(per_page,page):QueryBuilder-instance-method","name":"paginate","doc":"Sets `offset` and `limit` to get pagination-compatible results.","summary":"<p>Sets <code><a href=\"../DBX/QueryBuilder.html#offset:String-instance-method\">#offset</a></code> and <code><a href=\"../DBX/QueryBuilder.html#limit:String-instance-method\">#limit</a></code> to get pagination-compatible results.</p>","abstract":false,"args":[{"name":"per_page","doc":null,"default_value":"","external_name":"per_page","restriction":""},{"name":"page","doc":null,"default_value":"","external_name":"page","restriction":""}],"args_string":"(per_page, page) : QueryBuilder","args_html":"(per_page, page) : <a href=\"../DBX/QueryBuilder.html\">QueryBuilder</a>","location":{"filename":"src/query_builder/builder_criteria.cr","line_number":393,"url":null},"def":{"name":"paginate","args":[{"name":"per_page","doc":null,"default_value":"","external_name":"per_page","restriction":""},{"name":"page","doc":null,"default_value":"","external_name":"page","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"QueryBuilder","visibility":"Public","body":"@limit = add_arg(per_page)\n@offset = add_arg(((page > 0 ? page : 1) - 1) * per_page)\nself\n"}},{"id":"ph(position:Int):String-instance-method","html_id":"ph(position:Int):String-instance-method","name":"ph","doc":"Adds placeholder for a SQL argument.","summary":"<p>Adds placeholder for a SQL argument.</p>","abstract":false,"args":[{"name":"position","doc":null,"default_value":"","external_name":"position","restriction":"Int"}],"args_string":"(position : Int) : String","args_html":"(position : Int) : String","location":{"filename":"src/query_builder/builder_support.cr","line_number":44,"url":null},"def":{"name":"ph","args":[{"name":"position","doc":null,"default_value":"","external_name":"position","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@placeholder"}},{"id":"query(&):QueryBuilder-instance-method","html_id":"query(&):QueryBuilder-instance-method","name":"query","doc":"Generates a raw query.\n> Be careful, you have to manage arguments and quotes.\n\nExample:\n\n```\nputs builder.query { \"\n  SELECT * FROM #{q(tests)}\n  status = #{arg(true)}\n  AND (\n    #{q(:date)} <= #{arg(Time.utc - 1.day)}\n    OR role = #{arg(:admin)}\n  )\n  LIMIT 1\n\" }\n```\n\nGenerates:\n\n```text\nSELECT *\nFROM \"tests\"\nWHERE status = $1\nAND (\"date\" <= $2 OR role = $3)\nLIMIT 1\n```","summary":"<p>Generates a raw query.</p>","abstract":false,"args":[],"args_string":"(&) : QueryBuilder","args_html":"(&) : <a href=\"../DBX/QueryBuilder.html\">QueryBuilder</a>","location":{"filename":"src/query_builder/builder.cr","line_number":284,"url":null},"def":{"name":"query","args":[],"double_splat":null,"splat_index":null,"yields":0,"block_arg":null,"return_type":"QueryBuilder","visibility":"Public","body":"@query_method = :query\n@query = \" #{with QueryBuilderScope.new(self) yield} \"\nself\n"}},{"id":"query_count:Int-instance-method","html_id":"query_count:Int-instance-method","name":"query_count","doc":"Returns number of queries made by the current instance.","summary":"<p>Returns number of queries made by the current instance.</p>","abstract":false,"args":[],"args_string":" : Int","args_html":" : Int","location":{"filename":"src/query_builder/builder.cr","line_number":310,"url":null},"def":{"name":"query_count","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int","visibility":"Public","body":"@query_count"}},{"id":"query_method:Symbol?-instance-method","html_id":"query_method:Symbol?-instance-method","name":"query_method","doc":"Returns the query method.","summary":"<p>Returns the query method.</p>","abstract":false,"args":[],"args_string":" : Symbol?","args_html":" : Symbol?","location":{"filename":"src/query_builder/builder.cr","line_number":305,"url":null},"def":{"name":"query_method","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Symbol | ::Nil","visibility":"Public","body":"@query_method"}},{"id":"quote(field:FieldType):String-instance-method","html_id":"quote(field:FieldType):String-instance-method","name":"quote","doc":"Wraps *field* with quotes (`QUOTE`).","summary":"<p>Wraps <em>field</em> with quotes (<code><a href=\"../DBX/QueryBuilder.html#QUOTE\">QUOTE</a></code>).</p>","abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"FieldType"}],"args_string":"(field : FieldType) : String","args_html":"(field : <a href=\"../DBX/QueryBuilder/FieldType.html\">FieldType</a>) : String","location":{"filename":"src/query_builder/builder_support.cr","line_number":39,"url":null},"def":{"name":"quote","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"FieldType"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"\"#{QUOTE}#{field}#{QUOTE}\""}},{"id":"repair:QueryBuilder-instance-method","html_id":"repair:QueryBuilder-instance-method","name":"repair","doc":"Builds the `REPAIR` query","summary":"<p>Builds the <code>REPAIR</code> query</p>","abstract":false,"args":[],"args_string":" : QueryBuilder","args_html":" : <a href=\"../DBX/QueryBuilder.html\">QueryBuilder</a>","location":{"filename":"src/query_builder/builder.cr","line_number":240,"url":null},"def":{"name":"repair","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"QueryBuilder","visibility":"Public","body":"@query_method = :repair\nself\n"}},{"id":"repair(table:OneOrMoreFieldsType):QueryBuilder-instance-method","html_id":"repair(table:OneOrMoreFieldsType):QueryBuilder-instance-method","name":"repair","doc":"Builds the `REPAIR` query","summary":"<p>Builds the <code>REPAIR</code> query</p>","abstract":false,"args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":"OneOrMoreFieldsType"}],"args_string":"(table : OneOrMoreFieldsType) : QueryBuilder","args_html":"(table : <a href=\"../DBX/QueryBuilder/OneOrMoreFieldsType.html\">OneOrMoreFieldsType</a>) : <a href=\"../DBX/QueryBuilder.html\">QueryBuilder</a>","location":{"filename":"src/query_builder/builder.cr","line_number":240,"url":null},"def":{"name":"repair","args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":"OneOrMoreFieldsType"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"QueryBuilder","visibility":"Public","body":"repair\ntable(table)\n"}},{"id":"reset_query-instance-method","html_id":"reset_query-instance-method","name":"reset_query","doc":"Resets current query.","summary":"<p>Resets current query.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/query_builder/builder_criteria.cr","line_number":30,"url":null},"def":{"name":"reset_query","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@query_method = nil\n@query = \"\"\n@data_kv = \"\"\n@data = nil\n@options = nil\n@returning = nil\n@args = [] of DBValue\n@select = \"*\"\n@table = \"\"\n@join = \"\"\n@where = \"\"\n@group_by = \"\"\n@having = \"\"\n@order_by = \"\"\n@limit = \"\"\n@offset = \"\"\nnil\n"}},{"id":"returning(*name:FieldType):QueryBuilder-instance-method","html_id":"returning(*name:FieldType):QueryBuilder-instance-method","name":"returning","doc":"SQL field(s) to be returned after an `insert` statement.\n> `*` (wildcard) means all fields.","summary":"<p>SQL field(s) to be returned after an <code><a href=\"../DBX/QueryBuilder.html#insert(data:Hash%7CNamedTuple):QueryBuilder-instance-method\">#insert</a></code> statement.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"FieldType"}],"args_string":"(*name : FieldType) : QueryBuilder","args_html":"(*name : <a href=\"../DBX/QueryBuilder/FieldType.html\">FieldType</a>) : <a href=\"../DBX/QueryBuilder.html\">QueryBuilder</a>","location":{"filename":"src/query_builder/builder_criteria.cr","line_number":468,"url":null},"def":{"name":"returning","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"FieldType"}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"QueryBuilder","visibility":"Public","body":"self.returning(name)"}},{"id":"returning:String?-instance-method","html_id":"returning:String?-instance-method","name":"returning","doc":"Returns the SQL field(s) to be returned after an `insert` statement.\n> `*` (wildcard) means all fields.","summary":"<p>Returns the SQL field(s) to be returned after an <code><a href=\"../DBX/QueryBuilder.html#insert(data:Hash%7CNamedTuple):QueryBuilder-instance-method\">#insert</a></code> statement.</p>","abstract":false,"args":[],"args_string":" : String?","args_html":" : String?","location":{"filename":"src/query_builder/builder_criteria.cr","line_number":474,"url":null},"def":{"name":"returning","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":"@returning"}},{"id":"returning(fields:OneOrMoreFieldsType):QueryBuilder-instance-method","html_id":"returning(fields:OneOrMoreFieldsType):QueryBuilder-instance-method","name":"returning","doc":"SQL field(s) to be returned after an `insert` statement.\n> `*` (wildcard) means all fields.","summary":"<p>SQL field(s) to be returned after an <code><a href=\"../DBX/QueryBuilder.html#insert(data:Hash%7CNamedTuple):QueryBuilder-instance-method\">#insert</a></code> statement.</p>","abstract":false,"args":[{"name":"fields","doc":null,"default_value":"","external_name":"fields","restriction":"OneOrMoreFieldsType"}],"args_string":"(fields : OneOrMoreFieldsType) : QueryBuilder","args_html":"(fields : <a href=\"../DBX/QueryBuilder/OneOrMoreFieldsType.html\">OneOrMoreFieldsType</a>) : <a href=\"../DBX/QueryBuilder.html\">QueryBuilder</a>","location":{"filename":"src/query_builder/builder_criteria.cr","line_number":450,"url":null},"def":{"name":"returning","args":[{"name":"fields","doc":null,"default_value":"","external_name":"fields","restriction":"OneOrMoreFieldsType"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"QueryBuilder","visibility":"Public","body":"if query_method == (:insert)\nelse\n  raise(DBX::Error.new(\"\\\"returning\\\" method SHOULD be used only with \\\"insert\\\" statement.\"))\nend\n_fields = _build_selected_fields(fields)\n@returning = if @returning.nil? || ((@returning.not_nil!.compare(\"*\")) == 0)\n  _fields\nelse\n  \"#{@returning}, #{_fields}\"\nend\nself\n"}},{"id":"right_join(table:FieldType,field1:FieldType,field2:FieldType?=nil):QueryBuilder-instance-method","html_id":"right_join(table:FieldType,field1:FieldType,field2:FieldType?=nil):QueryBuilder-instance-method","name":"right_join","doc":"Adds `RIGHT JOIN` to the current query.","summary":"<p>Adds <code>RIGHT JOIN</code> to the current query.</p>","abstract":false,"args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":"FieldType"},{"name":"field1","doc":null,"default_value":"","external_name":"field1","restriction":"FieldType"},{"name":"field2","doc":null,"default_value":"nil","external_name":"field2","restriction":"FieldType | ::Nil"}],"args_string":"(table : FieldType, field1 : FieldType, field2 : FieldType? = <span class=\"n\">nil</span>) : QueryBuilder","args_html":"(table : <a href=\"../DBX/QueryBuilder/FieldType.html\">FieldType</a>, field1 : <a href=\"../DBX/QueryBuilder/FieldType.html\">FieldType</a>, field2 : <a href=\"../DBX/QueryBuilder/FieldType.html\">FieldType</a>? = <span class=\"n\">nil</span>) : <a href=\"../DBX/QueryBuilder.html\">QueryBuilder</a>","location":{"filename":"src/query_builder/builder_criteria.cr","line_number":213,"url":null},"def":{"name":"right_join","args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":"FieldType"},{"name":"field1","doc":null,"default_value":"","external_name":"field1","restriction":"FieldType"},{"name":"field2","doc":null,"default_value":"nil","external_name":"field2","restriction":"FieldType | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"QueryBuilder","visibility":"Public","body":"join(table, field1, field2, \"RIGHT\")"}},{"id":"right_outer_join(table:FieldType,field1:FieldType,field2:FieldType?=nil):QueryBuilder-instance-method","html_id":"right_outer_join(table:FieldType,field1:FieldType,field2:FieldType?=nil):QueryBuilder-instance-method","name":"right_outer_join","doc":"Adds `RIGHT OUTER JOIN` to the current query.","summary":"<p>Adds <code>RIGHT OUTER JOIN</code> to the current query.</p>","abstract":false,"args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":"FieldType"},{"name":"field1","doc":null,"default_value":"","external_name":"field1","restriction":"FieldType"},{"name":"field2","doc":null,"default_value":"nil","external_name":"field2","restriction":"FieldType | ::Nil"}],"args_string":"(table : FieldType, field1 : FieldType, field2 : FieldType? = <span class=\"n\">nil</span>) : QueryBuilder","args_html":"(table : <a href=\"../DBX/QueryBuilder/FieldType.html\">FieldType</a>, field1 : <a href=\"../DBX/QueryBuilder/FieldType.html\">FieldType</a>, field2 : <a href=\"../DBX/QueryBuilder/FieldType.html\">FieldType</a>? = <span class=\"n\">nil</span>) : <a href=\"../DBX/QueryBuilder.html\">QueryBuilder</a>","location":{"filename":"src/query_builder/builder_criteria.cr","line_number":213,"url":null},"def":{"name":"right_outer_join","args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":"FieldType"},{"name":"field1","doc":null,"default_value":"","external_name":"field1","restriction":"FieldType"},{"name":"field2","doc":null,"default_value":"nil","external_name":"field2","restriction":"FieldType | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"QueryBuilder","visibility":"Public","body":"join(table, field1, field2, \"RIGHT OUTER\")"}},{"id":"select(fields:OneOrMoreFieldsType):QueryBuilder-instance-method","html_id":"select(fields:OneOrMoreFieldsType):QueryBuilder-instance-method","name":"select","doc":"Selects one or more fields.","summary":"<p>Selects one or more fields.</p>","abstract":false,"args":[{"name":"fields","doc":null,"default_value":"","external_name":"fields","restriction":"OneOrMoreFieldsType"}],"args_string":"(fields : OneOrMoreFieldsType) : QueryBuilder","args_html":"(fields : <a href=\"../DBX/QueryBuilder/OneOrMoreFieldsType.html\">OneOrMoreFieldsType</a>) : <a href=\"../DBX/QueryBuilder.html\">QueryBuilder</a>","location":{"filename":"src/query_builder/builder_criteria.cr","line_number":151,"url":null},"def":{"name":"select","args":[{"name":"fields","doc":null,"default_value":"","external_name":"fields","restriction":"OneOrMoreFieldsType"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"QueryBuilder","visibility":"Public","body":"_fields = _build_selected_fields(fields)\n@select = (@select.compare(\"*\")) == 0 ? _fields : \"#{@select}, #{_fields}\"\nself\n"}},{"id":"select:String-instance-method","html_id":"select:String-instance-method","name":"select","doc":"Returns selected field(s). Default is `*`.\n\n```\nputs builder.select\n```","summary":"<p>Returns selected field(s).</p>","abstract":false,"args":[],"args_string":" : String","args_html":" : String","location":{"filename":"src/query_builder/builder_criteria.cr","line_number":167,"url":null},"def":{"name":"select","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@select"}},{"id":"select(*name:FieldType):QueryBuilder-instance-method","html_id":"select(*name:FieldType):QueryBuilder-instance-method","name":"select","doc":"Selects one or more fields.","summary":"<p>Selects one or more fields.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"FieldType"}],"args_string":"(*name : FieldType) : QueryBuilder","args_html":"(*name : <a href=\"../DBX/QueryBuilder/FieldType.html\">FieldType</a>) : <a href=\"../DBX/QueryBuilder.html\">QueryBuilder</a>","location":{"filename":"src/query_builder/builder_criteria.cr","line_number":158,"url":null},"def":{"name":"select","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"FieldType"}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"QueryBuilder","visibility":"Public","body":"self.select(name)"}},{"id":"sum(field:FieldType,name=nil):QueryBuilder-instance-method","html_id":"sum(field:FieldType,name=nil):QueryBuilder-instance-method","name":"sum","doc":"Adds `SUM` to the current query.","summary":"<p>Adds <code>SUM</code> to the current query.</p>","abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"FieldType"},{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(field : FieldType, name = <span class=\"n\">nil</span>) : QueryBuilder","args_html":"(field : <a href=\"../DBX/QueryBuilder/FieldType.html\">FieldType</a>, name = <span class=\"n\">nil</span>) : <a href=\"../DBX/QueryBuilder.html\">QueryBuilder</a>","location":{"filename":"src/query_builder/builder_criteria.cr","line_number":171,"url":null},"def":{"name":"sum","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"FieldType"},{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"QueryBuilder","visibility":"Public","body":"sum = \"SUM(#{field})\"\nif !name.nil?\n  sum = sum + \" AS #{quote(name)}\"\nend\n@select = (@select.compare(\"*\")) == 0 ? sum : \"#{@select}, #{sum}\"\nself\n"}},{"id":"table(&):QueryBuilder-instance-method","html_id":"table(&):QueryBuilder-instance-method","name":"table","doc":"Defines in raw form the SQL statement of the table(s).\n> Be careful, you have to manage arguments (`arg`) and quotes (`q`).\n\nExample:\n\n```\nbuilder.find { \"#{q(\"posts\") AS p, articles a\" }\"\n```\n\nGenerates:\n\n```\nSELECT * FROM \"posts\" AS p, articles a\n```","summary":"<p>Defines in raw form the SQL statement of the table(s).</p>","abstract":false,"args":[],"args_string":"(&) : QueryBuilder","args_html":"(&) : <a href=\"../DBX/QueryBuilder.html\">QueryBuilder</a>","location":{"filename":"src/query_builder/builder_criteria.cr","line_number":100,"url":null},"def":{"name":"table","args":[],"double_splat":null,"splat_index":null,"yields":0,"block_arg":null,"return_type":"QueryBuilder","visibility":"Public","body":"@table = with QueryBuilderScope.new(self) yield\nself\n"}},{"id":"table(*name:FieldType):QueryBuilder-instance-method","html_id":"table(*name:FieldType):QueryBuilder-instance-method","name":"table","doc":"Targets tables defined by variadic arguments.\n\n```\nbuilder.table(:table1, :table2)\n```","summary":"<p>Targets tables defined by variadic arguments.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"FieldType"}],"args_string":"(*name : FieldType) : QueryBuilder","args_html":"(*name : <a href=\"../DBX/QueryBuilder/FieldType.html\">FieldType</a>) : <a href=\"../DBX/QueryBuilder.html\">QueryBuilder</a>","location":{"filename":"src/query_builder/builder_criteria.cr","line_number":82,"url":null},"def":{"name":"table","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"FieldType"}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"QueryBuilder","visibility":"Public","body":"table(name)"}},{"id":"table:String-instance-method","html_id":"table:String-instance-method","name":"table","doc":"Returns table name(s). Returns empty string if no table has been defined.\n\n```\nputs builder.table unless builder.table.blank? # or .empty?\n```","summary":"<p>Returns table name(s).</p>","abstract":false,"args":[],"args_string":" : String","args_html":" : String","location":{"filename":"src/query_builder/builder_criteria.cr","line_number":110,"url":null},"def":{"name":"table","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@table"}},{"id":"table(name:OneOrMoreFieldsType):QueryBuilder-instance-method","html_id":"table(name:OneOrMoreFieldsType):QueryBuilder-instance-method","name":"table","doc":"Targets one or more tables.","summary":"<p>Targets one or more tables.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"OneOrMoreFieldsType"}],"args_string":"(name : OneOrMoreFieldsType) : QueryBuilder","args_html":"(name : <a href=\"../DBX/QueryBuilder/OneOrMoreFieldsType.html\">OneOrMoreFieldsType</a>) : <a href=\"../DBX/QueryBuilder.html\">QueryBuilder</a>","location":{"filename":"src/query_builder/builder_criteria.cr","line_number":68,"url":null},"def":{"name":"table","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"OneOrMoreFieldsType"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"QueryBuilder","visibility":"Public","body":"@table = if name.is_a?(FieldsType)\n  name.map do |_name|\n    quote(_name)\n  end.join(\", \")\nelse\n  quote(name.to_s)\nend\nself\n"}},{"id":"to_data_h(data:Hash|NamedTuple):DataHashType-instance-method","html_id":"to_data_h(data:Hash|NamedTuple):DataHashType-instance-method","name":"to_data_h","doc":"Converts `NamedTuple` to `DataHashType`.","summary":"<p>Converts <code>NamedTuple</code> to <code><a href=\"../DBX/QueryBuilder/DataHashType.html\">DataHashType</a></code>.</p>","abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Hash | NamedTuple"}],"args_string":"(data : Hash | NamedTuple) : DataHashType","args_html":"(data : Hash | NamedTuple) : <a href=\"../DBX/QueryBuilder/DataHashType.html\">DataHashType</a>","location":{"filename":"src/query_builder/builder.cr","line_number":23,"url":null},"def":{"name":"to_data_h","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Hash | NamedTuple"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"DataHashType","visibility":"Public","body":"h = DataHashType.new\ndata.each do |k, v|\n  h[k] = v\nend\nh\n"}},{"id":"update(data:Hash|NamedTuple):QueryBuilder-instance-method","html_id":"update(data:Hash|NamedTuple):QueryBuilder-instance-method","name":"update","doc":null,"summary":null,"abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Hash | NamedTuple"}],"args_string":"(data : Hash | NamedTuple) : QueryBuilder","args_html":"(data : Hash | NamedTuple) : <a href=\"../DBX/QueryBuilder.html\">QueryBuilder</a>","location":{"filename":"src/query_builder/builder.cr","line_number":137,"url":null},"def":{"name":"update","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Hash | NamedTuple"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"QueryBuilder","visibility":"Public","body":"@query_method = :update\nif data\nelse\n  raise(Error.new(\"No data to update\"))\nend\n@data_kv = add_args_and_kv_from_data(to_data_h(data))\nself\n"}},{"id":"update(table:OneOrMoreFieldsType,data:Hash|NamedTuple):QueryBuilder-instance-method","html_id":"update(table:OneOrMoreFieldsType,data:Hash|NamedTuple):QueryBuilder-instance-method","name":"update","doc":null,"summary":null,"abstract":false,"args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":"OneOrMoreFieldsType"},{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Hash | NamedTuple"}],"args_string":"(table : OneOrMoreFieldsType, data : Hash | NamedTuple) : QueryBuilder","args_html":"(table : <a href=\"../DBX/QueryBuilder/OneOrMoreFieldsType.html\">OneOrMoreFieldsType</a>, data : Hash | NamedTuple) : <a href=\"../DBX/QueryBuilder.html\">QueryBuilder</a>","location":{"filename":"src/query_builder/builder.cr","line_number":144,"url":null},"def":{"name":"update","args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":"OneOrMoreFieldsType"},{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Hash | NamedTuple"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"QueryBuilder","visibility":"Public","body":"update(data)\ntable(table)\n"}},{"id":"update(pk_name,pk_value,data:Hash|NamedTuple):QueryBuilder-instance-method","html_id":"update(pk_name,pk_value,data:Hash|NamedTuple):QueryBuilder-instance-method","name":"update","doc":null,"summary":null,"abstract":false,"args":[{"name":"pk_name","doc":null,"default_value":"","external_name":"pk_name","restriction":""},{"name":"pk_value","doc":null,"default_value":"","external_name":"pk_value","restriction":""},{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Hash | NamedTuple"}],"args_string":"(pk_name, pk_value, data : Hash | NamedTuple) : QueryBuilder","args_html":"(pk_name, pk_value, data : Hash | NamedTuple) : <a href=\"../DBX/QueryBuilder.html\">QueryBuilder</a>","location":{"filename":"src/query_builder/builder.cr","line_number":149,"url":null},"def":{"name":"update","args":[{"name":"pk_name","doc":null,"default_value":"","external_name":"pk_name","restriction":""},{"name":"pk_value","doc":null,"default_value":"","external_name":"pk_value","restriction":""},{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Hash | NamedTuple"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"QueryBuilder","visibility":"Public","body":"update(data)\n@query_method = :update_one\nself.where(pk_name, pk_value)\n"}},{"id":"where(field:FieldType,op_or_val,value=nil,type=&quot;&quot;,and_or=&quot;AND&quot;):QueryBuilder-instance-method","html_id":"where(field:FieldType,op_or_val,value=nil,type=&quot;&quot;,and_or=&quot;AND&quot;):QueryBuilder-instance-method","name":"where","doc":"Where clause.","summary":"<p>Where clause.</p>","abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"FieldType"},{"name":"op_or_val","doc":null,"default_value":"","external_name":"op_or_val","restriction":""},{"name":"value","doc":null,"default_value":"nil","external_name":"value","restriction":""},{"name":"type","doc":null,"default_value":"\"\"","external_name":"type","restriction":""},{"name":"and_or","doc":null,"default_value":"\"AND\"","external_name":"and_or","restriction":""}],"args_string":"(field : FieldType, op_or_val, value = <span class=\"n\">nil</span>, type = <span class=\"s\">&quot;&quot;</span>, and_or = <span class=\"s\">&quot;AND&quot;</span>) : QueryBuilder","args_html":"(field : <a href=\"../DBX/QueryBuilder/FieldType.html\">FieldType</a>, op_or_val, value = <span class=\"n\">nil</span>, type = <span class=\"s\">&quot;&quot;</span>, and_or = <span class=\"s\">&quot;AND&quot;</span>) : <a href=\"../DBX/QueryBuilder.html\">QueryBuilder</a>","location":{"filename":"src/query_builder/builder_criteria.cr","line_number":239,"url":null},"def":{"name":"where","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"FieldType"},{"name":"op_or_val","doc":null,"default_value":"","external_name":"op_or_val","restriction":""},{"name":"value","doc":null,"default_value":"nil","external_name":"value","restriction":""},{"name":"type","doc":null,"default_value":"\"\"","external_name":"type","restriction":""},{"name":"and_or","doc":null,"default_value":"\"AND\"","external_name":"and_or","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"QueryBuilder","visibility":"Public","body":"where = if @operators.includes?(op_or_val.to_s)\n  \" #{type}#{quote(field)} #{op_or_val} #{add_arg(value)}\"\nelse\n  \" #{type}#{quote(field)} = #{add_arg(op_or_val)}\"\nend\n@where = @where + (@where.empty? ? where : \" #{and_or}#{where}\")\nself\n"}},{"id":"where(&):QueryBuilder-instance-method","html_id":"where(&):QueryBuilder-instance-method","name":"where","doc":"Adds a raw `where` to current query.\n> Be careful, you have to manage arguments (`arg`) and quotes (`q`).\n\nExample:\n\n```\nbuilder.find(\"tests\").where { \"\n  status = #{arg(true)}\n  AND (\n    #{q(:date)} <= #{arg(Time.utc - 1.day)}\n    OR role = #{arg(:admin)}\n  )\n\" }\n```\n\nGenerates:\n\n```text\nSELECT *\nFROM \"tests\"\nWHERE status = $1\nAND (\"date\" <= $2 OR role = $3)\n```","summary":"<p>Adds a raw <code><a href=\"../DBX/QueryBuilder.html#where(&):QueryBuilder-instance-method\">#where</a></code> to current query.</p>","abstract":false,"args":[],"args_string":"(&) : QueryBuilder","args_html":"(&) : <a href=\"../DBX/QueryBuilder.html\">QueryBuilder</a>","location":{"filename":"src/query_builder/builder_criteria.cr","line_number":273,"url":null},"def":{"name":"where","args":[],"double_splat":null,"splat_index":null,"yields":0,"block_arg":null,"return_type":"QueryBuilder","visibility":"Public","body":"@where = @where + \" #{with QueryBuilderScope.new(self) yield}\"\nself\n"}}],"macros":[],"types":[{"html_id":"dbx/DBX/QueryBuilder/ArgsType","path":"DBX/QueryBuilder/ArgsType.html","kind":"alias","full_name":"DBX::QueryBuilder::ArgsType","name":"ArgsType","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"dbx","program":false,"enum":false,"alias":true,"aliased":"Enumerable(Bool | Float32 | Float64 | Int32 | Int64 | Slice(UInt8) | String | Time | UUID | Nil)","aliased_html":"Enumerable(Bool | Float32 | Float64 | Int32 | Int64 | Slice(UInt8) | String | Time | UUID | Nil)","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"dbx/DBX/QueryBuilder","kind":"class","full_name":"DBX::QueryBuilder","name":"QueryBuilder"},"doc":"Argument(s) for SQL query.","summary":"<p>Argument(s) for SQL query.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"dbx/DBX/QueryBuilder/DataHashType","path":"DBX/QueryBuilder/DataHashType.html","kind":"alias","full_name":"DBX::QueryBuilder::DataHashType","name":"DataHashType","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"dbx","program":false,"enum":false,"alias":true,"aliased":"Hash(String | Symbol, Bool | Float32 | Float64 | Int32 | Int64 | Slice(UInt8) | String | Time | UUID | Nil)","aliased_html":"Hash(String | Symbol, Bool | Float32 | Float64 | Int32 | Int64 | Slice(UInt8) | String | Time | UUID | Nil)","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"dbx/DBX/QueryBuilder","kind":"class","full_name":"DBX::QueryBuilder","name":"QueryBuilder"},"doc":"The type of the data `Hash`,\nused as a KV container for insert and update.","summary":"<p>The type of the data <code>Hash</code>, used as a KV container for insert and update.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"dbx/DBX/QueryBuilder/DBValue","path":"DBX/QueryBuilder/DBValue.html","kind":"alias","full_name":"DBX::QueryBuilder::DBValue","name":"DBValue","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"dbx","program":false,"enum":false,"alias":true,"aliased":"(Bool | Float32 | Float64 | Int32 | Int64 | Slice(UInt8) | String | Time | UUID | Nil)","aliased_html":"Bool | Float32 | Float64 | Int32 | Int64 | Slice(UInt8) | String | Time | UUID | Nil","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"dbx/DBX/QueryBuilder","kind":"class","full_name":"DBX::QueryBuilder","name":"QueryBuilder"},"doc":"DB Value.","summary":"<p>DB Value.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"dbx/DBX/QueryBuilder/FieldsType","path":"DBX/QueryBuilder/FieldsType.html","kind":"alias","full_name":"DBX::QueryBuilder::FieldsType","name":"FieldsType","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"dbx","program":false,"enum":false,"alias":true,"aliased":"(Enumerable(String | Symbol) | Enumerable(String) | Enumerable(Symbol))","aliased_html":"Enumerable(String | Symbol) | Enumerable(String) | Enumerable(Symbol)","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"dbx/DBX/QueryBuilder","kind":"class","full_name":"DBX::QueryBuilder","name":"QueryBuilder"},"doc":"The type for several fields contained in an `Enumerable` (e.g: `Array` or `Tuple`).","summary":"<p>The type for several fields contained in an <code>Enumerable</code> (e.g: <code>Array</code> or <code>Tuple</code>).</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"dbx/DBX/QueryBuilder/FieldType","path":"DBX/QueryBuilder/FieldType.html","kind":"alias","full_name":"DBX::QueryBuilder::FieldType","name":"FieldType","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"dbx","program":false,"enum":false,"alias":true,"aliased":"(String | Symbol)","aliased_html":"String | Symbol","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"dbx/DBX/QueryBuilder","kind":"class","full_name":"DBX::QueryBuilder","name":"QueryBuilder"},"doc":"Field type.","summary":"<p>Field type.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"dbx/DBX/QueryBuilder/OneOrMoreFieldsType","path":"DBX/QueryBuilder/OneOrMoreFieldsType.html","kind":"alias","full_name":"DBX::QueryBuilder::OneOrMoreFieldsType","name":"OneOrMoreFieldsType","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"dbx","program":false,"enum":false,"alias":true,"aliased":"(Enumerable(String | Symbol) | Enumerable(String) | Enumerable(Symbol) | String | Symbol)","aliased_html":"Enumerable(String | Symbol) | Enumerable(String) | Enumerable(Symbol) | String | Symbol","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"dbx/DBX/QueryBuilder","kind":"class","full_name":"DBX::QueryBuilder","name":"QueryBuilder"},"doc":"The type for one or more fields.","summary":"<p>The type for one or more fields.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"dbx/DBX/QueryBuilder/SQLandArgsType","path":"DBX/QueryBuilder/SQLandArgsType.html","kind":"alias","full_name":"DBX::QueryBuilder::SQLandArgsType","name":"SQLandArgsType","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"dbx","program":false,"enum":false,"alias":true,"aliased":"Tuple(String, Enumerable(Bool | Float32 | Float64 | Int32 | Int64 | Slice(UInt8) | String | Time | UUID | Nil))","aliased_html":"{String, Enumerable(Bool | Float32 | Float64 | Int32 | Int64 | Slice(UInt8) | String | Time | UUID | Nil)}","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"dbx/DBX/QueryBuilder","kind":"class","full_name":"DBX::QueryBuilder","name":"QueryBuilder"},"doc":"The return type of `build` method.","summary":"<p>The return type of <code>build</code> method.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]},{"html_id":"dbx/DBX/QueryBuilderScope","path":"DBX/QueryBuilderScope.html","kind":"struct","full_name":"DBX::QueryBuilderScope","name":"QueryBuilderScope","abstract":false,"superclass":{"html_id":"dbx/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"dbx/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"dbx/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"dbx/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"dbx","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"dbx/DBX","kind":"module","full_name":"DBX","name":"DBX"},"doc":"Handy `QueryBuilder` scope used into `Block`.","summary":"<p>Handy <code><a href=\"../DBX/QueryBuilder.html\">QueryBuilder</a></code> scope used into <code>Block</code>.</p>","class_methods":[],"constructors":[{"id":"new(builder:QueryBuilder)-class-method","html_id":"new(builder:QueryBuilder)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"builder","doc":null,"default_value":"","external_name":"builder","restriction":"QueryBuilder"}],"args_string":"(builder : QueryBuilder)","args_html":"(builder : <a href=\"../DBX/QueryBuilder.html\">QueryBuilder</a>)","location":{"filename":"src/query_builder/scope.cr","line_number":13,"url":null},"def":{"name":"new","args":[{"name":"builder","doc":null,"default_value":"","external_name":"builder","restriction":"QueryBuilder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(builder)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"arg(value):String-instance-method","html_id":"arg(value):String-instance-method","name":"arg","doc":"Same as `QueryBuilder#add_arg`","summary":"<p>Same as <code><a href=\"../DBX/QueryBuilder.html#add_arg(value):String-instance-method\">QueryBuilder#add_arg</a></code></p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value) : String","args_html":"(value) : String","location":{"filename":"src/query_builder/scope.cr","line_number":17,"url":null},"def":{"name":"arg","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@builder.add_arg(value)"}},{"id":"q(field:FieldType,io:IO::Memory):IO::Memory-instance-method","html_id":"q(field:FieldType,io:IO::Memory):IO::Memory-instance-method","name":"q","doc":"Same as `QueryBuilder#quote`","summary":"<p>Same as <code><a href=\"../DBX/QueryBuilder.html#quote(field:FieldType):String-instance-method\">QueryBuilder#quote</a></code></p>","abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"FieldType"},{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO::Memory"}],"args_string":"(field : FieldType, io : IO::Memory) : IO::Memory","args_html":"(field : <a href=\"../DBX/QueryBuilderScope/FieldType.html\">FieldType</a>, io : IO::Memory) : IO::Memory","location":{"filename":"src/query_builder/scope.cr","line_number":22,"url":null},"def":{"name":"q","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"FieldType"},{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO::Memory"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"IO::Memory","visibility":"Public","body":"@builder.quote(field, io)"}},{"id":"q(field:FieldType):String-instance-method","html_id":"q(field:FieldType):String-instance-method","name":"q","doc":"Same as `QueryBuilder#quote`","summary":"<p>Same as <code><a href=\"../DBX/QueryBuilder.html#quote(field:FieldType):String-instance-method\">QueryBuilder#quote</a></code></p>","abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"FieldType"}],"args_string":"(field : FieldType) : String","args_html":"(field : <a href=\"../DBX/QueryBuilderScope/FieldType.html\">FieldType</a>) : String","location":{"filename":"src/query_builder/scope.cr","line_number":27,"url":null},"def":{"name":"q","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"FieldType"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@builder.quote(field)"}}],"macros":[],"types":[{"html_id":"dbx/DBX/QueryBuilderScope/FieldType","path":"DBX/QueryBuilderScope/FieldType.html","kind":"alias","full_name":"DBX::QueryBuilderScope::FieldType","name":"FieldType","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"dbx","program":false,"enum":false,"alias":true,"aliased":"(String | Symbol)","aliased_html":"String | Symbol","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"dbx/DBX/QueryBuilderScope","kind":"struct","full_name":"DBX::QueryBuilderScope","name":"QueryBuilderScope"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]}]}]}}