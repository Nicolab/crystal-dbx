version: "3.7"

x-app_env: &app_env local
x-pg-host: &pg-host pg
x-pg-port: &pg-port 5432
x-pg-user: &pg-user app
x-pg-name: &pg-name app
x-pg-password: &pg-password pass
x-pg-uri: &pg-uri postgres://app:pass@pg:5432/app
x-sqlite-uri: &sqlite-uri sqlite3://./.tmp/data.db

networks:
  pg:
    driver: bridge

services:
  pg:
    image: postgres:latest
    # restart: unless-stopped
    networks:
      - pg
    ports:
      - 5432:5432
    # expose:
    #   - 5432
    environment:
      POSTGRES_USER: *pg-user
      POSTGRES_DB: *pg-name
      POSTGRES_PASSWORD: *pg-password

  #--------------------------------------------------------------------------
  # DB admin
  #--------------------------------------------------------------------------

  # adminer:
  #   image: adminer
  #   restart: unless-stopped
  #   networks:
  #     - pg
  #   ports:
  #     - 8050:8080
  #   depends_on:
  #     - pg

  # ----------------------------------------------------------------------------
  # App
  # ----------------------------------------------------------------------------

  # App - test_pg
  test_pg:
    build:
      context: ./
      # dockerfile: ./Dockerfile
    user: ${CMD_USER:-app}
    volumes:
      - ./:/app/
    networks:
      - pg
    depends_on:
      - pg
    environment:
      APP_ENV: *app_env
      LOG: trace
      DB_HOST: *pg-host
      DB_PORT: *pg-port
      DB_NAME: *pg-name
      DB_USERNAME: *pg-user
      DB_PASSWORD: *pg-password
      DB_URI: *pg-uri
      DB_TYPE: pg
    command: bash
    tty: true

  # App - test_sqlite
  test_sqlite:
    build:
      context: ./
      # dockerfile: ./Dockerfile
    user: ${CMD_USER:-app}
    volumes:
      - ./:/app/
    environment:
      APP_ENV: *app_env
      LOG: trace
      DB_URI: *sqlite-uri
      DB_TYPE: sqlite
    command: bash
    tty: true
